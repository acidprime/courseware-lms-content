{
  "UUID": "7977715d-bbcf-331d-8180-46bc2e913d04",
  "_displayName_": "Facts",
  "_keyword_": "course_pathway",
  "components": [
    {
      "_displayName_": "Course Requirement #322",
      "_keyword_": "course_requirement",
      "component": {
        "UUID": "fa0e1416-e6d3-3a0e-b11e-818cd9392dcf",
        "_displayName_": "Facts - What Are They?",
        "_keyword_": "content_component",
        "content": "<!DOCTYPE html>\r\n<html>\r\n\r\n<head>\r\n\r\n<meta charset=\"utf-8\">\r\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\">\r\n<title>340 Facts_whatarethey</title>\r\n\r\n\r\n\r\n</head>\r\n\r\n<body>\r\n\r\n<h2 id=\"toc_0\">Introduction:</h2>\r\n\r\n<p>Puppet automatically creates a set of variables for you called <strong>facts</strong>. <a href=\"https://puppet.com/docs/puppet/5.3/lang_facts_and_builtin_vars.html\">Facts</a> contain useful information integral to a node, such as its operating system, its hostname, or its IP address. Use this information to create conditional logic: make code behave a certain way based on a set of conditions. To see a list of all the facts available, enter the command <code>facter -p</code> on any system.</p>\r\n\r\n<h2 id=\"toc_1\">Task:</h2>\r\n\r\n<p>Type the command <code>facter -p</code> to get a list of all facts available.</p>\r\n\r\n<p>\r\n<iframe src=\"https://magicbox.whatsaranjit.com/facts/what_are_they\" width=\"100%\" height=\"500px\" frameborder=\"0\"></iframe></p>\r\n\r\n\r\n\r\n\r\n</body>\r\n\r\n</html>",
        "created": "2017-11-10 15:18:26",
        "createdById": 49633,
        "customField01": "",
        "customField02": "",
        "customField03": "",
        "customField04": "",
        "customField05": "",
        "customField06": "",
        "customField07": "",
        "customField08": "",
        "customField09": "",
        "customField10": "",
        "deprecatedBy": "",
        "duration": {
          "days": 0,
          "minutesPerDay": 0
        },
        "generateCertificate": "DEFAULT",
        "generateProofOfCompletion": "DEFAULT",
        "id": 340,
        "modified": "2018-01-12 17:07:06",
        "modifiedById": 49633,
        "name": "Facts - What Are They?",
        "orderNumber": 0,
        "price": {
          "amount": 0.0,
          "currency": "USD"
        },
        "primaryCategoryId": 7,
        "status": "ACTIVE_COMPONENT",
        "urlName": "facts-what-are-they",
        "visibility": "HIDDEN"
      },
      "componentId": 340,
      "componentUUID": "fa0e1416-e6d3-3a0e-b11e-818cd9392dcf",
      "created": "2017-12-04 14:20:39",
      "createdById": 49633,
      "id": 322,
      "modified": "2018-01-10 16:01:00",
      "modifiedById": 31489,
      "name": "Facts - What Are They?",
      "pathwayId": 344,
      "position": 0
    },
    {
      "_displayName_": "Course Requirement #318",
      "_keyword_": "course_requirement",
      "component": {
        "UUID": "5fb2222c-f99f-3cf4-a55f-4d0c72b040b5",
        "_displayName_": "Facts - Working With Facts",
        "_keyword_": "content_component",
        "content": "<h2 id=\"toc_1\">Introduction:</h2>\r\n<p>Most facts contain a single value like <code>\"hostname\":</code> <code>\"host.puppet.com\"</code> or <code>\"kernel\": \"Linux\"</code>. One way to use these facts is to create server-specific attributes.</p>\r\n<p>Example:</p>\r\n<div>\r\n<pre><code class=\"language-none\">file { '/etc/motd':\r\n  content =&gt; \"My hostname: ${hostname}\",\r\n}</code></pre>\r\n</div>\r\n<p>In this example, any system using this code will have its own hostname printed into the file. In this way, you can have server-specific outcomes with a single piece of code. This means you don't have to rewrite your code for every single machine you're managing.</p>\r\n<h2 id=\"toc_2\">Task:</h2>\r\n<p><iframe src=\"https://magicbox.whatsaranjit.com/facts/working_with_facts\" width=\"100%\" height=\"500px\" frameborder=\"0\"></iframe></p>",
        "created": "2017-12-04 13:47:27",
        "createdById": 49633,
        "customField01": "",
        "customField02": "",
        "customField03": "",
        "customField04": "",
        "customField05": "",
        "customField06": "",
        "customField07": "",
        "customField08": "",
        "customField09": "",
        "customField10": "",
        "deprecatedBy": "",
        "duration": {
          "days": 0,
          "minutesPerDay": 0
        },
        "generateCertificate": "DEFAULT",
        "generateProofOfCompletion": "DEFAULT",
        "id": 350,
        "modified": "2018-01-12 16:19:22",
        "modifiedById": 49633,
        "name": "Facts - Working With Facts",
        "orderNumber": 0,
        "price": {
          "amount": 0.0,
          "currency": "USD"
        },
        "primaryCategoryId": 7,
        "status": "ACTIVE_COMPONENT",
        "urlName": "facts-working-with-facts",
        "visibility": "HIDDEN"
      },
      "componentId": 350,
      "componentUUID": "5fb2222c-f99f-3cf4-a55f-4d0c72b040b5",
      "created": "2017-12-04 13:56:07",
      "createdById": 49633,
      "id": 318,
      "modified": "2018-01-10 16:01:00",
      "modifiedById": 31489,
      "name": "Facts - Working With Facts",
      "pathwayId": 344,
      "position": 1
    },
    {
      "_displayName_": "Course Requirement #349",
      "_keyword_": "course_requirement",
      "component": {
        "UUID": "5f2ff0fb-6fce-3298-b9fa-890bf07060ba",
        "_displayName_": "Facts - Working With Data: Overview of Arrays",
        "_keyword_": "content_component",
        "content": "<h2>Introduction:</h2>\r\n<p>Other facts contain more complex values. They might contain data structures like arrays or hashes. If you want to learn more about arrays and hashes before diving in, check out the syntax section in <a href=\"https://puppet.com/docs/puppet/5.3/lang_data_array.html\">the Puppet docs</a>.</p>\r\n<h3 id=\"toc_2\">Arrays:</h3>\r\n<p>Arrays allow you to define and work with a large set of the same type of data. An array is a series of values that looks like <code>['one', 'two', 'three']</code>, denoted by square brackets. Puppet is like most programming languages and uses zero-based index counting: the first element of any series of values is assigned the index 0&nbsp;instead of the index 1.&nbsp;You can retrieve values from an array using the position, or index, that it is in. For example, to retrieve the first value in an array variable&nbsp; <code>$array</code>, you would access it using the index 0, or <code>$array[0].&nbsp;</code></p>\r\n<h3 id=\"toc_3\">Create an array</h3>\r\n<div>\r\n<pre><code class=\"language-none\">$my_array = ['one', 'two', 'three']\r\n\r\n# Access values inside array\r\n\r\n$first  = $my_array[0]              # equal to 'one'\r\n\r\n$second = $my_array[1]              # equal to 'two'\r\n\r\n$third  = $my_array[2]              # equal to 'three'\r\n\r\n**Note:** The first value in the array begins at index 0, not index 1.</code></pre>\r\n</div>\r\n<h2 id=\"toc_4\">Task:</h2>\r\n<p><iframe src=\"https://magicbox.whatsaranjit.com/facts/working_with_arrays\" width=\"100%\" height=\"500px\" frameborder=\"0\"></iframe></p>",
        "created": "2017-12-04 13:55:15",
        "createdById": 49633,
        "customField01": "",
        "customField02": "",
        "customField03": "",
        "customField04": "",
        "customField05": "",
        "customField06": "",
        "customField07": "",
        "customField08": "",
        "customField09": "",
        "customField10": "",
        "deprecatedBy": "",
        "duration": {
          "days": 0,
          "minutesPerDay": 0
        },
        "generateCertificate": "DEFAULT",
        "generateProofOfCompletion": "DEFAULT",
        "id": 353,
        "modified": "2018-01-12 15:26:54",
        "modifiedById": 49633,
        "name": "Facts - Working With Data: Overview of Arrays",
        "orderNumber": 0,
        "price": {
          "amount": 0.0,
          "currency": "USD"
        },
        "primaryCategoryId": 7,
        "status": "ACTIVE_COMPONENT",
        "urlName": "facts-working-with-data",
        "visibility": "HIDDEN"
      },
      "componentId": 353,
      "componentUUID": "5f2ff0fb-6fce-3298-b9fa-890bf07060ba",
      "created": "2017-12-18 14:36:18",
      "createdById": 49633,
      "id": 349,
      "modified": "2018-01-10 16:01:00",
      "modifiedById": 31489,
      "name": "Facts - Working With Data: Overview",
      "pathwayId": 344,
      "position": 2
    },
    {
      "_displayName_": "Course Requirement #351",
      "_keyword_": "course_requirement",
      "component": {
        "UUID": "0fc1aeb6-a18f-3fab-a44e-715547e53f9c",
        "_displayName_": "Facts - Working With Data: Hashes",
        "_keyword_": "content_component",
        "content": "<body>\r\n\r\n<h2 id=\"toc_1\">Introduction:</h2>\r\n\r\n<p>A hash is a series of key-value pairs denoted by curly braces that looks like:</p>\r\n<code>{ </br>\r\n'cat' = 'meow',</br> \r\n'dog' = 'woof',</br> \r\n'cow' = 'moo',</br>\r\n }</br>\r\n</code></br>\r\n<p>Each key-value pair in the hash looks like:</p> \r\n<code>'key' = 'value'</br></code></br>\r\n<p>We can retrieve values from a hash using the key name:</p>\r\n\r\n<div><pre><code class=\"language-none\"># First create a hash\r\n$my_hash = {</br>\r\n'cat' = 'meow',</br> \r\n'dog' = 'woof',</br> \r\n'cow' = 'moo',</br>\r\n}</br>\r\n\r\n# Access values inside hash\r\n\r\n$feline  = $my_hash['cat']             # equal to 'meow'\r\n\r\n$canine = $my_hash['dog']             # equal to 'woof'\r\n\r\n$bovine  = $my_hash['cow']             # equal to 'moo'</code></pre></div>\r\n\r\n<h2 id=\"toc_2\">Task:</h2>\r\n<p><iframe src=\"https://magicbox.whatsaranjit.com/facts/working_with_hashes\" width=\"100%\" height=\"500px\" frameborder=\"0\"></iframe></p>\r\n\r\n\r\n\r\n\r\n</body>",
        "created": "2017-12-19 09:10:36",
        "createdById": 49633,
        "customField01": "",
        "customField02": "",
        "customField03": "",
        "customField04": "",
        "customField05": "",
        "customField06": "",
        "customField07": "",
        "customField08": "",
        "customField09": "",
        "customField10": "",
        "deprecatedBy": "",
        "duration": {
          "days": 0,
          "minutesPerDay": 0
        },
        "generateCertificate": "DEFAULT",
        "generateProofOfCompletion": "DEFAULT",
        "id": 372,
        "modified": "2018-01-12 14:43:23",
        "modifiedById": 49633,
        "name": "Facts - Working With Data: Hashes",
        "orderNumber": 0,
        "price": {
          "amount": 0.0,
          "currency": "USD"
        },
        "primaryCategoryId": 7,
        "status": "DISABLED",
        "urlName": "facts---working-with-data-hashes",
        "visibility": "HIDDEN"
      },
      "componentId": 372,
      "componentUUID": "0fc1aeb6-a18f-3fab-a44e-715547e53f9c",
      "created": "2017-12-19 09:10:55",
      "createdById": 49633,
      "id": 351,
      "modified": "2018-01-10 16:00:59",
      "modifiedById": 31489,
      "name": "Facts - Working With Data: Hashes",
      "pathwayId": 344,
      "position": 4
    },
    {
      "_displayName_": "Course Requirement #319",
      "_keyword_": "course_requirement",
      "component": {
        "UUID": "ac3157bc-242d-3037-bfe6-4cdb725059d8",
        "_displayName_": "Facts - Using Logic With Facts",
        "_keyword_": "content_component",
        "content": "<h2 id=\"toc_1\">Introduction:</h2>\r\n<p>You learned that you can use variables and facts to dynamically set values in your code. The next step is to use variables and facts to make decisions in your code. Here you'll learn to write code that follows logic like <q>If my operating system is Windows, do this. Otherwise, do something else.</q> You can use if/else syntax to do this in your code. Take a look at the following layout:</p>\r\n<div>\r\n<pre><code class=\"language-none\">if $some_fact == 'some_value' {\r\n  $my_variable = 'yes'\r\n}\r\nelse {\r\n  $my_variable = 'no'\r\n}</code></pre>\r\n</div>\r\n<h2 id=\"toc_2\">Task:</h2>\r\n<p>Complete the exercise below. Notice that the $hello_file variable is used in the file resource declaration.</p>\r\n<p><iframe src=\"https://magicbox.whatsaranjit.com/facts/using_logic_with_facts\" width=\"100%\" height=\"500px\" frameborder=\"0\"></iframe></p>",
        "created": "2017-12-04 13:50:38",
        "createdById": 49633,
        "customField01": "",
        "customField02": "",
        "customField03": "",
        "customField04": "",
        "customField05": "",
        "customField06": "",
        "customField07": "",
        "customField08": "",
        "customField09": "",
        "customField10": "",
        "deprecatedBy": "",
        "duration": {
          "days": 0,
          "minutesPerDay": 0
        },
        "generateCertificate": "DEFAULT",
        "generateProofOfCompletion": "DEFAULT",
        "id": 351,
        "modified": "2018-01-12 14:55:33",
        "modifiedById": 49633,
        "name": "Facts - Using Logic With Facts",
        "orderNumber": 0,
        "price": {
          "amount": 0.0,
          "currency": "USD"
        },
        "primaryCategoryId": 7,
        "status": "ACTIVE_COMPONENT",
        "urlName": "facts-using-logic-with-facts",
        "visibility": "HIDDEN"
      },
      "componentId": 351,
      "componentUUID": "ac3157bc-242d-3037-bfe6-4cdb725059d8",
      "created": "2017-12-04 13:56:19",
      "createdById": 49633,
      "id": 319,
      "modified": "2018-01-10 16:01:00",
      "modifiedById": 31489,
      "name": "Facts - Using Logic With Facts",
      "pathwayId": 344,
      "position": 5
    }
  ],
  "courseInfo": "",
  "created": "2017-11-10 15:20:17",
  "createdById": 49633,
  "customField01": "",
  "customField02": "",
  "customField03": "",
  "customField04": "",
  "customField05": "",
  "customField06": "",
  "customField07": "",
  "customField08": "",
  "customField09": "",
  "customField10": "",
  "deprecatedBy": "",
  "generateCertificate": "DEFAULT",
  "generateProofOfCompletion": "DEFAULT",
  "id": 344,
  "modified": "2017-11-14 17:00:24",
  "modifiedById": 38,
  "name": "Facts",
  "orderNumber": 0,
  "price": "0.0 USD",
  "primaryCategoryId": 7,
  "status": "ACTIVE_COMPONENT",
  "type": {
    "_displayName_": "Module",
    "_keyword_": "course_pathway_type",
    "created": "2015-06-14 23:21:43",
    "id": 3,
    "modified": "2015-06-14 23:21:43",
    "name": "Module",
    "rootType": false,
    "supportedComponentTypes": [
      "e_learning_component",
      "course",
      "content_component",
      "exam_component"
    ]
  },
  "typeId": 3,
  "urlName": "facts",
  "visibility": "HIDDEN",
  "duration.minutesPerDay": 0,
  "duration.days": 0
}
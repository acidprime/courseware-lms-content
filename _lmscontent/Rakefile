require 'yaml'

REPO_PATH='./repos/courseware-lms-content'

@config = YAML.load_file(File.expand_path('../_tasks/config.yaml', __FILE__))

# Pull rake taskes in from takes directory
task_dir = File.expand_path('../_tasks', __FILE__)

# Pull in the functional Rake tasks
Dir["#{task_dir}/**/*.rake"].each do |task_file|
  load task_file
end

# Create the stub tasks for tracking upload state and for manual deploys
# This assumes you have ran `rake download:repos` first
Dir["#{REPO_PATH}/_lmscontent/**/*"].each do |component_directory|
  if File.exist?("#{component_directory}/metadata.json")
    # Allow for subfolders 1 level deep
    if component_directory.split('/').length == 6
      parent_directory = File.basename(File.dirname(component_directory))
      rake_task_name = "#{parent_directory}-#{File.basename(component_directory)}"
    else
      rake_task_name = File.basename(component_directory) 
    end

    namespace :release do
      desc "Build component (#{rake_task_name}) and upload release to <target>"
      task rake_task_name.to_sym, [:target] do  |_t, args|
        puts "invoking \`rake upload:component:#{rake_task_name}\`"
        Rake::Task['upload:component'].reenable
        Rake::Task['upload:component'].invoke(component_directory, args[:target])
      end
    end
  else
    next
  end
end

# Run interactively if user gives us no arguments
task :default => ['create:component']

{
  "UUID": "e3296989-6cbd-393d-9a1c-e735d26811ac",
  "_displayName_": "Introduction to Puppet Syntax",
  "_keyword_": "course_pathway",
  "components": [
    {
      "_displayName_": "Course Requirement #334",
      "_keyword_": "course_requirement",
      "component": {
        "UUID": "19fee100-bf7c-3e3d-9eec-a1d5ad7e642a",
        "_displayName_": "How To Use This Course",
        "_keyword_": "content_component",
        "content": "<script src=\"https://fast.wistia.com/embed/medias/omlwov3mvp.jsonp\" async></script><script src=\"https://fast.wistia.com/assets/external/E-v1.js\" async></script><div class=\"wistia_responsive_padding\" style=\"padding:56.25% 0 0 0;position:relative;\"><div class=\"wistia_responsive_wrapper\" style=\"height:100%;left:0;position:absolute;top:0;width:100%;\"><div class=\"wistia_embed wistia_async_omlwov3mvp seo=false videoFoam=true\" style=\"height:100%;width:100%\">&nbsp;</div></div></div>\r\n<p>&nbsp;</p>\r\n<h2 id=\"toc_0\">Welcome!</h2>\r\n<p>Puppet Syntax is designed just for you: the sysadmin who knows there is a better, easier way to manage your infrastructure. This course is the essential first step in understanding the power of Puppet. The lessons are designed to be quick, effective, and give you what you need to build your configuration management skills.</p>\r\n<h2 id=\"toc_1\">Navigation</h2>\r\n<ul>\r\n<ul>\r\n<li>\r\n<p>Hide or reveal the course sidebar menu by clicking on the hamburger icon on the top right of the page.</p>\r\n</li>\r\n<li>\r\n<p>Clicking any title inside the sidebar menu will take you to that unit.</p>\r\n</li>\r\n<li>\r\n<p>Navigate through the lessons using the green forward arrow and gray back arrow at the bottom of the page.</p>\r\n</li>\r\n<li>\r\n<p>Your progress is always saved when you leave.</p>\r\n</li>\r\n<li>\r\n<p>Short animations will demonstrate different ways to write syntax.&nbsp;</p>\r\n</li>\r\n</ul>\r\n</ul>\r\n<p>Interactive code boxes throughout the course simulate a command line tool and evaluate your code to help you master Puppet syntax. Here's how they work:</p>\r\n<ul>\r\n<li>Look for the text inside the code boxes for hints to complete each exercise.&nbsp;</li>\r\n<li>Like a command line interface, you will get feedback and error messages if you enter invalid syntax or code into the box.</li>\r\n<li>Unlike a command line interface, this output has been specifically designed for learning purposes and differs from running Puppet on your own system.</li>\r\n<li>You will only be able to select the test button once your code meets certain basic parameters.&nbsp;&nbsp;</li>\r\n</ul>\r\n<p><iframe src=\"https://learn.puppet.com/static/images/courses/syntax/357-command-line.gif\" width=\"100%\" height=\"100%\" frameborder=\"0\"></iframe></p>\r\n<p>&nbsp;</p>\r\n<h2 id=\"toc_2\">Resources</h2>\r\n<ul>\r\n<li>\r\n<p>Download any video transcripts or course files by clicking on the downloads icon in the page header.</p>\r\n</li>\r\n<li>\r\n<p>Clarify and learn new terminology with the course glossary.</p>\r\n</li>\r\n<li>\r\n<p><a href=\"https://puppetcommunity.slack.com/\" target=\"_blank\">Connect </a>and get some help from the community on Slack.</p>\r\n</li>\r\n<li>\r\n<p><a href=\"https://puppet.com/docs\" target=\"_blank\">Access</a>&nbsp;Puppet's documentation for both Puppet Enterprise and open source Puppet.</p>\r\n</li>\r\n</ul>\r\n<h2 id=\"toc_3\">Help</h2>\r\n<p>If you experience a technical problem during this training, let us know at <a href=\"mailto:education+support@puppet.com\" target=\"_blank\">education+support@puppet.com</a></p>\r\n<script type=\"text/javascript\">// <![CDATA[\r\nvar _self=\"undefined\"!=typeof window?window:\"undefined\"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?self:{},Prism=function(){var e=/\\blang(?:uage)?-(\\w+)\\b/i,t=0,n=_self.Prism={util:{encode:function(e){return e instanceof a?new a(e.type,n.util.encode(e.content),e.alias):\"Array\"===n.util.type(e)?e.map(n.util.encode):e.replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/\\u00a0/g,\" \")},type:function(e){return Object.prototype.toString.call(e).match(/\\[object (\\w+)\\]/)[1]},objId:function(e){return e.__id||Object.defineProperty(e,\"__id\",{value:++t}),e.__id},clone:function(e){var t=n.util.type(e);switch(t){case\"Object\":var a={};for(var r in e)e.hasOwnProperty(r)&&(a[r]=n.util.clone(e[r]));return a;case\"Array\":return e.map&&e.map(function(e){return n.util.clone(e)})}return e}},languages:{extend:function(e,t){var a=n.util.clone(n.languages[e]);for(var r in t)a[r]=t[r];return a},insertBefore:function(e,t,a,r){r=r||n.languages;var l=r[e];if(2==arguments.length){a=arguments[1];for(var i in a)a.hasOwnProperty(i)&&(l[i]=a[i]);return l}var o={};for(var s in l)if(l.hasOwnProperty(s)){if(s==t)for(var i in a)a.hasOwnProperty(i)&&(o[i]=a[i]);o[s]=l[s]}return n.languages.DFS(n.languages,function(t,n){n===r[e]&&t!=e&&(this[t]=o)}),r[e]=o},DFS:function(e,t,a,r){r=r||{};for(var l in e)e.hasOwnProperty(l)&&(t.call(e,l,e[l],a||l),\"Object\"!==n.util.type(e[l])||r[n.util.objId(e[l])]?\"Array\"!==n.util.type(e[l])||r[n.util.objId(e[l])]||(r[n.util.objId(e[l])]=!0,n.languages.DFS(e[l],t,l,r)):(r[n.util.objId(e[l])]=!0,n.languages.DFS(e[l],t,null,r)))}},plugins:{},highlightAll:function(e,t){var a={callback:t,selector:'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'};n.hooks.run(\"before-highlightall\",a);for(var r,l=a.elements||document.querySelectorAll(a.selector),i=0;r=l[i++];)n.highlightElement(r,e===!0,a.callback)},highlightElement:function(t,a,r){for(var l,i,o=t;o&&!e.test(o.className);)o=o.parentNode;o&&(l=(o.className.match(e)||[,\"\"])[1],i=n.languages[l]),t.className=t.className.replace(e,\"\").replace(/\\s+/g,\" \")+\" language-\"+l,o=t.parentNode,/pre/i.test(o.nodeName)&&(o.className=o.className.replace(e,\"\").replace(/\\s+/g,\" \")+\" language-\"+l);var s=t.textContent,u={element:t,language:l,grammar:i,code:s};if(!s||!i)return n.hooks.run(\"complete\",u),void 0;if(n.hooks.run(\"before-highlight\",u),a&&_self.Worker){var c=new Worker(n.filename);c.onmessage=function(e){u.highlightedCode=e.data,n.hooks.run(\"before-insert\",u),u.element.innerHTML=u.highlightedCode,r&&r.call(u.element),n.hooks.run(\"after-highlight\",u),n.hooks.run(\"complete\",u)},c.postMessage(JSON.stringify({language:u.language,code:u.code,immediateClose:!0}))}else u.highlightedCode=n.highlight(u.code,u.grammar,u.language),n.hooks.run(\"before-insert\",u),u.element.innerHTML=u.highlightedCode,r&&r.call(t),n.hooks.run(\"after-highlight\",u),n.hooks.run(\"complete\",u)},highlight:function(e,t,r){var l=n.tokenize(e,t);return a.stringify(n.util.encode(l),r)},tokenize:function(e,t){var a=n.Token,r=[e],l=t.rest;if(l){for(var i in l)t[i]=l[i];delete t.rest}e:for(var i in t)if(t.hasOwnProperty(i)&&t[i]){var o=t[i];o=\"Array\"===n.util.type(o)?o:[o];for(var s=0;s<o.length;++s){var u=o[s],c=u.inside,g=!!u.lookbehind,h=!!u.greedy,f=0,d=u.alias;u=u.pattern||u;for(var p=0;p<r.length;p++){var m=r[p];if(r.length>e.length)break e;if(!(m instanceof a)){u.lastIndex=0;var y=u.exec(m),v=1;if(!y&&h&&p!=r.length-1){var b=r[p+1].matchedStr||r[p+1],k=m+b;if(p<r.length-2&&(k+=r[p+2].matchedStr||r[p+2]),u.lastIndex=0,y=u.exec(k),!y)continue;var w=y.index+(g?y[1].length:0);if(w>=m.length)continue;var _=y.index+y[0].length,P=m.length+b.length;if(v=3,P>=_){if(r[p+1].greedy)continue;v=2,k=k.slice(0,P)}m=k}if(y){g&&(f=y[1].length);var w=y.index+f,y=y[0].slice(f),_=w+y.length,S=m.slice(0,w),O=m.slice(_),j=[p,v];S&&j.push(S);var A=new a(i,c?n.tokenize(y,c):y,d,y,h);j.push(A),O&&j.push(O),Array.prototype.splice.apply(r,j)}}}}}return r},hooks:{all:{},add:function(e,t){var a=n.hooks.all;a[e]=a[e]||[],a[e].push(t)},run:function(e,t){var a=n.hooks.all[e];if(a&&a.length)for(var r,l=0;r=a[l++];)r(t)}}},a=n.Token=function(e,t,n,a,r){this.type=e,this.content=t,this.alias=n,this.matchedStr=a||null,this.greedy=!!r};if(a.stringify=function(e,t,r){if(\"string\"==typeof e)return e;if(\"Array\"===n.util.type(e))return e.map(function(n){return a.stringify(n,t,e)}).join(\"\");var l={type:e.type,content:a.stringify(e.content,t,r),tag:\"span\",classes:[\"token\",e.type],attributes:{},language:t,parent:r};if(\"comment\"==l.type&&(l.attributes.spellcheck=\"true\"),e.alias){var i=\"Array\"===n.util.type(e.alias)?e.alias:[e.alias];Array.prototype.push.apply(l.classes,i)}n.hooks.run(\"wrap\",l);var o=\"\";for(var s in l.attributes)o+=(o?\" \":\"\")+s+'=\"'+(l.attributes[s]||\"\")+'\"';return\"<\"+l.tag+' class=\"'+l.classes.join(\" \")+'\" '+o+\">\"+l.content+\"</\"+l.tag+\">\"},!_self.document)return _self.addEventListener?(_self.addEventListener(\"message\",function(e){var t=JSON.parse(e.data),a=t.language,r=t.code,l=t.immediateClose;_self.postMessage(n.highlight(r,n.languages[a],a)),l&&_self.close()},!1),_self.Prism):_self.Prism;var r=document.currentScript||[].slice.call(document.getElementsByTagName(\"script\")).pop();return r&&(n.filename=r.src,document.addEventListener&&!r.hasAttribute(\"data-manual\")&&document.addEventListener(\"DOMContentLoaded\",n.highlightAll)),_self.Prism}();\"undefined\"!=typeof module&&module.exports&&(module.exports=Prism),\"undefined\"!=typeof global&&(global.Prism=Prism);\r\n// ]]></script>\r\n<script type=\"text/javascript\">// <![CDATA[\r\n!function(){if(\"undefined\"!=typeof self&&self.Prism&&self.document){var e={html:\"HTML\",xml:\"XML\",svg:\"SVG\",mathml:\"MathML\",css:\"CSS\",clike:\"C-like\",javascript:\"JavaScript\",abap:\"ABAP\",actionscript:\"ActionScript\",apacheconf:\"Apache Configuration\",apl:\"APL\",applescript:\"AppleScript\",asciidoc:\"AsciiDoc\",aspnet:\"ASP.NET (C#)\",autoit:\"AutoIt\",autohotkey:\"AutoHotkey\",basic:\"BASIC\",csharp:\"C#\",cpp:\"C++\",coffeescript:\"CoffeeScript\",\"css-extras\":\"CSS Extras\",fsharp:\"F#\",glsl:\"GLSL\",http:\"HTTP\",inform7:\"Inform 7\",json:\"JSON\",latex:\"LaTeX\",lolcode:\"LOLCODE\",matlab:\"MATLAB\",mel:\"MEL\",nasm:\"NASM\",nginx:\"nginx\",nsis:\"NSIS\",objectivec:\"Objective-C\",ocaml:\"OCaml\",parigp:\"PARI/GP\",php:\"PHP\",\"php-extras\":\"PHP Extras\",powershell:\"PowerShell\",jsx:\"React JSX\",rest:\"reST (reStructuredText)\",sas:\"SAS\",sass:\"Sass (Sass)\",scss:\"Sass (Scss)\",sql:\"SQL\",typescript:\"TypeScript\",vhdl:\"VHDL\",vim:\"vim\",wiki:\"Wiki markup\",yaml:\"YAML\"};Prism.hooks.add(\"before-highlight\",function(s){var a=s.element.parentNode;if(a&&/pre/i.test(a.nodeName)){var t,i,r=a.getAttribute(\"data-language\")||e[s.language]||s.language.substring(0,1).toUpperCase()+s.language.substring(1),l=a.previousSibling;l&&/\\s*\\bprism-show-language\\b\\s*/.test(l.className)&&l.firstChild&&/\\s*\\bprism-show-language-label\\b\\s*/.test(l.firstChild.className)?i=l.firstChild:(t=document.createElement(\"div\"),i=document.createElement(\"div\"),i.className=\"prism-show-language-label\",t.className=\"prism-show-language\",t.appendChild(i),a.parentNode.insertBefore(t,a)),i.innerHTML=r}})}}();\r\n// ]]></script>",
        "created": "2017-12-07 16:24:39",
        "createdById": 49633,
        "customField01": "",
        "customField02": "",
        "customField03": "",
        "customField04": "",
        "customField05": "",
        "customField06": "",
        "customField07": "",
        "customField08": "",
        "customField09": "",
        "customField10": "",
        "deprecatedBy": "",
        "duration": {
          "days": 0,
          "minutesPerDay": 0
        },
        "generateCertificate": "DEFAULT",
        "generateProofOfCompletion": "DEFAULT",
        "id": 357,
        "modified": "2018-01-16 15:49:31",
        "modifiedById": 49633,
        "name": "How To Use This Course",
        "orderNumber": 0,
        "price": {
          "amount": 0.0,
          "currency": "USD"
        },
        "primaryCategoryId": 7,
        "status": "ACTIVE_COMPONENT",
        "urlName": "how-to-use-this-course",
        "visibility": "HIDDEN"
      },
      "componentId": 357,
      "componentUUID": "19fee100-bf7c-3e3d-9eec-a1d5ad7e642a",
      "created": "2017-12-07 16:25:01",
      "createdById": 49633,
      "id": 334,
      "modified": "2018-01-25 15:53:56",
      "modifiedById": 49633,
      "name": "How To Use This Course",
      "pathwayId": 328,
      "position": 0
    },
    {
      "_displayName_": "Course Requirement #296",
      "_keyword_": "course_requirement",
      "component": {
        "UUID": "e2b8f7f9-7d32-3265-b3bf-ecfea87e30d4",
        "_displayName_": "Hello World",
        "_keyword_": "course_pathway",
        "components": [
          {
            "_displayName_": "Course Requirement #297",
            "_keyword_": "course_requirement",
            "component": {
              "UUID": "866e40da-4e4b-34c6-ab66-1f0372bd9538",
              "_displayName_": "Hello world",
              "_keyword_": "content_component",
              "content": "<h2 id=\"toc_0\">Introduction:</h2>\r\n<p>If you’ve ever learned a coding language or started a blog, chances are that you started by learning how to display the phrase Hello, World. Well, that is exactly what we are going to do using Puppet code. The purpose of this exercise is for you to try out writing some Puppet code to see that it doesn’t have to be complicated—in fact, it can be fun!</p>\r\n<p>This is what Hello world looks like written in Puppet code:</p>\r\n<img src=\"https://learn.puppet.com/static/images/courses/syntax/329-puppet-code-explained.png\" width=100% height=100% alt=\"The first line, file { '/etc/motd':, tells Puppet that we will be managing the /etc/motd file on our system. The second line, content => 'Hello world', tells Puppet to set the contents of the /etc/motd file to the text 'Hello world' using the content attribute. The third line, }, closes the code and tells Puppet that we're done managing the /etc/motd file.\">\r\n<h2 id=\"toc_1\">Task:</h2>\r\n<p>Now it&rsquo;s your turn to write Hello world using Puppet code. Type the example code from above into the box below.</p>\r\n<p><iframe src=\"https://magicbox.whatsaranjit.com/syntax/hello_world\" width=\"100%\" height=\"500px\" frameborder=\"0\"></iframe></p>",
              "created": "2017-11-09 14:00:34",
              "createdById": 49633,
              "customField01": "",
              "customField02": "",
              "customField03": "",
              "customField04": "",
              "customField05": "",
              "customField06": "",
              "customField07": "",
              "customField08": "",
              "customField09": "",
              "customField10": "",
              "deprecatedBy": "",
              "duration": {
                "days": 0,
                "minutesPerDay": 0
              },
              "generateCertificate": "DEFAULT",
              "generateProofOfCompletion": "DEFAULT",
              "id": 329,
              "modified": "2018-01-29 11:54:23",
              "modifiedById": 38,
              "name": "Hello world",
              "orderNumber": 0,
              "price": {
                "amount": 0.0,
                "currency": "USD"
              },
              "primaryCategoryId": 7,
              "status": "ACTIVE_COMPONENT",
              "urlName": "hello-world",
              "visibility": "HIDDEN"
            },
            "componentId": 329,
            "componentUUID": "866e40da-4e4b-34c6-ab66-1f0372bd9538",
            "created": "2017-11-09 14:01:18",
            "createdById": 49633,
            "id": 297,
            "modified": "2018-01-25 15:53:56",
            "modifiedById": 49633,
            "name": "Hello World",
            "pathwayId": 330,
            "position": 1
          }
        ],
        "courseInfo": "",
        "created": "2017-11-09 14:01:07",
        "createdById": 49633,
        "customField01": "",
        "customField02": "",
        "customField03": "",
        "customField04": "",
        "customField05": "",
        "customField06": "",
        "customField07": "",
        "customField08": "",
        "customField09": "",
        "customField10": "",
        "deprecatedBy": "",
        "duration": {
          "days": 0,
          "minutesPerDay": 0
        },
        "generateCertificate": "DEFAULT",
        "generateProofOfCompletion": "DEFAULT",
        "id": 330,
        "modified": "2017-11-14 16:59:24",
        "modifiedById": 38,
        "name": "Hello World",
        "orderNumber": 0,
        "price": {
          "amount": 0.0,
          "currency": "USD"
        },
        "primaryCategoryId": 7,
        "status": "ACTIVE_COMPONENT",
        "type": {
          "_displayName_": "Module",
          "_keyword_": "course_pathway_type",
          "created": "2015-06-14 23:21:43",
          "id": 3,
          "modified": "2015-06-14 23:21:43",
          "name": "Module",
          "rootType": false,
          "supportedComponentTypes": [
            "e_learning_component",
            "course",
            "content_component",
            "exam_component"
          ]
        },
        "typeId": 3,
        "urlName": "hello-world",
        "visibility": "HIDDEN"
      },
      "componentId": 330,
      "componentUUID": "e2b8f7f9-7d32-3265-b3bf-ecfea87e30d4",
      "created": "2017-11-09 14:01:08",
      "createdById": 49633,
      "id": 296,
      "modified": "2018-01-25 15:53:56",
      "modifiedById": 49633,
      "name": "Hello World",
      "pathwayId": 328,
      "position": 1
    },
    {
      "_displayName_": "Course Requirement #340",
      "_keyword_": "course_requirement",
      "component": {
        "UUID": "c1a0ec7b-82cb-306f-9a28-f2e8bb696eb4",
        "_displayName_": "Resources",
        "_keyword_": "course_pathway",
        "components": [
          {
            "_displayName_": "Course Requirement #341",
            "_keyword_": "course_requirement",
            "component": {
              "UUID": "7061f094-5ec3-3a6d-a2ef-b172089fb8ee",
              "_displayName_": "Resources - Anatomy of a Resource",
              "_keyword_": "content_component",
              "content": "<h2>TERMINOLOGY! DOCS! VIDEO!</h2>\r\n<p>&nbsp;</p>\r\n<p>Anatomy of a Resource</p>\r\n<p>What are <strong>resources</strong>? Resources are a single unit of something that you can make changes to using Puppet code. It might be as small as a single <code>file</code>, or it might be as large as a whole Apache virtual host. What's important is that a resourse is a singular thing that can be managed as a whole unit. They are composed of four main parts: a type, a title, attributes, and values. In the Hello, World example, you managed the <code>/etc/motd</code> resource.</p>\r\n<p style=\"text-align: center;\"><img src=\"/static/images/courses/syntax/363-anatomy-of-a-resource-nobg.png\" alt=\"Diagram of the parts of a resource\" width=\"700\" /></p>\r\n<h6 style=\"text-align: center;\"><a href=\"/static/images/courses/syntax/363-anatomy-of-a-resource-nobg.png\" target=\"_blank\">Enlarge image</a></h6>\r\n<p>Explore each one of these components in greater detail.</p>\r\n<p><strong>What is a type?</strong></p>\r\n<p>Every resource is associated with a resource<strong> type</strong>, which describes what kind of configuration it manages and provides knobs and settings for configuring that resource. Puppet has many built-in resource types, like files, cron jobs, services, etc. See the <a href=\"https://puppet.com/docs/puppet/latest/type.html\">resource type reference</a> for information about the built-in resource types. You used the file type when you wrote Hello world in Puppet code earlier in this course.</p>\r\n<p><strong>What is a title?</strong></p>\r\n<p>The <strong>title</strong> is a string that identifies a resource to Puppet. A title doesn&rsquo;t have to match the name of what you&rsquo;re managing on the target system, but you&rsquo;ll often want it to. In the Hello world example, the title of the file resource was <code>/etc/motd,</code> which is the location of the file.</p>\r\n<p><strong>What are attributes?</strong></p>\r\n<p><strong>Attributes</strong> describe the desired state of the resource and each attribute handles some aspect of the resource. Think of them as the knobs and settings that let you describe the desired state of the resource. For example, you can say that Puppet should make sure that the <code>owner</code> of a file is <code>student</code> by setting the attribute as in the example above. Each resource type has its own set of available attributes. See the <a href=\"https://puppet.com/docs/puppet/5.3/type.html\">resource type reference</a> for a complete list. Most resource types have a handful of crucial attributes and a larger number of optional ones.</p>\r\n<p><strong>What are values?</strong></p>\r\n<p>Every attribute you declare must have a <strong>value</strong>. The format of the value depends on what the attribute accepts. For example, the value might need to be a file path, IP address, or a true/false.</p>\r\n<blockquote>\r\n<p><strong>Pro Tip:</strong></p>\r\n<p>There are many third party modules you can install that deliver more resource types, such as the <a href=\"https://forge.puppet.com/puppetlabs/mysql\">puppetlabs/mysql</a> module that adds the <code>mysql_user</code> resource type. You can find and install modules by browsing the <a href=\"http://forge.puppetlabs.com/\">Puppet Forge</a>.</p>\r\n</blockquote>",
              "created": "2017-12-14 15:56:49",
              "createdById": 49633,
              "customField01": "",
              "customField02": "",
              "customField03": "",
              "customField04": "",
              "customField05": "",
              "customField06": "",
              "customField07": "",
              "customField08": "",
              "customField09": "",
              "customField10": "",
              "deprecatedBy": "",
              "duration": {
                "days": 0,
                "minutesPerDay": 0
              },
              "generateCertificate": "DEFAULT",
              "generateProofOfCompletion": "DEFAULT",
              "id": 363,
              "modified": "2018-01-25 15:40:18",
              "modifiedById": 31489,
              "name": "Resources - Anatomy of a Resource",
              "orderNumber": 0,
              "price": {
                "amount": 0.0,
                "currency": "USD"
              },
              "primaryCategoryId": 7,
              "status": "ACTIVE_COMPONENT",
              "urlName": "resources-anatomy-of-a-resource",
              "visibility": "HIDDEN"
            },
            "componentId": 363,
            "componentUUID": "7061f094-5ec3-3a6d-a2ef-b172089fb8ee",
            "created": "2017-12-14 15:58:29",
            "createdById": 49633,
            "id": 341,
            "modified": "2018-01-25 15:53:57",
            "modifiedById": 49633,
            "name": "Resources - Anatomy of a Resource",
            "pathwayId": 364,
            "position": 1
          }
        ],
        "courseInfo": "",
        "created": "2017-12-14 15:57:39",
        "createdById": 49633,
        "customField01": "",
        "customField02": "",
        "customField03": "",
        "customField04": "",
        "customField05": "",
        "customField06": "",
        "customField07": "",
        "customField08": "",
        "customField09": "",
        "customField10": "",
        "deprecatedBy": "",
        "duration": {
          "days": 0,
          "minutesPerDay": 0
        },
        "generateCertificate": "DEFAULT",
        "generateProofOfCompletion": "DEFAULT",
        "id": 364,
        "modified": "2017-12-14 15:57:54",
        "modifiedById": 49633,
        "name": "Resources",
        "orderNumber": 0,
        "price": {
          "amount": 0.0,
          "currency": "USD"
        },
        "primaryCategoryId": 7,
        "status": "ACTIVE_COMPONENT",
        "type": {
          "_displayName_": "Module",
          "_keyword_": "course_pathway_type",
          "created": "2015-06-14 23:21:43",
          "id": 3,
          "modified": "2015-06-14 23:21:43",
          "name": "Module",
          "rootType": false,
          "supportedComponentTypes": [
            "e_learning_component",
            "course",
            "content_component",
            "exam_component"
          ]
        },
        "typeId": 3,
        "urlName": "resources",
        "visibility": "HIDDEN"
      },
      "componentId": 364,
      "componentUUID": "c1a0ec7b-82cb-306f-9a28-f2e8bb696eb4",
      "created": "2017-12-14 15:57:39",
      "createdById": 49633,
      "id": 340,
      "modified": "2018-01-25 15:53:56",
      "modifiedById": 49633,
      "name": "Resources",
      "pathwayId": 328,
      "position": 2
    },
    {
      "_displayName_": "Course Requirement #298",
      "_keyword_": "course_requirement",
      "component": {
        "UUID": "89dfacc2-363c-37f9-8439-f9735fe08344",
        "_displayName_": "Basics",
        "_keyword_": "course_pathway",
        "components": [
          {
            "_displayName_": "Course Requirement #327",
            "_keyword_": "course_requirement",
            "component": {
              "UUID": "ef80d188-99d5-3e9f-b5fb-f045123afd62",
              "_displayName_": "Basics - Querying the System",
              "_keyword_": "content_component",
              "content": "<h2 id=\"toc_0\">Introduction:</h2>\r\n<p>Puppet can see a variety of attributes about a file or any resource type. Some examples of other attributes might include <strong>mode</strong>, <strong>ensure</strong>, <strong>owner</strong>, or <strong>group</strong>. The <code>puppet resource</code> command shows you all the attributes Puppet knows about a resource, as well as their values. This is useful for identifying and examining the contents of any given file.</p>\r\n<h2 id=\"toc_1\">Task:</h2>\r\n<p>Enter the <code>puppet resource</code> command to see all the attributes of the <code>file</code> at <code>/etc/motd</code>.</p>\r\n<p><iframe src=\"https://magicbox.whatsaranjit.com/syntax/querying_the_system\" width=\"100%\" height=\"500px\" frameborder=\"0\"></iframe></p>",
              "created": "2017-11-09 14:25:05",
              "createdById": 49633,
              "customField01": "",
              "customField02": "",
              "customField03": "",
              "customField04": "",
              "customField05": "",
              "customField06": "",
              "customField07": "",
              "customField08": "",
              "customField09": "",
              "customField10": "",
              "deprecatedBy": "",
              "duration": {
                "days": 0,
                "minutesPerDay": 0
              },
              "generateCertificate": "DEFAULT",
              "generateProofOfCompletion": "DEFAULT",
              "id": 331,
              "modified": "2018-01-12 16:34:23",
              "modifiedById": 49633,
              "name": "Basics - Querying the System",
              "orderNumber": 0,
              "price": {
                "amount": 0.0,
                "currency": "USD"
              },
              "primaryCategoryId": 7,
              "status": "ACTIVE_COMPONENT",
              "urlName": "basics-querying-the-system",
              "visibility": "HIDDEN"
            },
            "componentId": 331,
            "componentUUID": "ef80d188-99d5-3e9f-b5fb-f045123afd62",
            "created": "2017-12-04 14:41:44",
            "createdById": 49633,
            "id": 327,
            "modified": "2018-01-25 15:53:57",
            "modifiedById": 49633,
            "name": "Basics - Querying the System",
            "pathwayId": 335,
            "position": 0
          },
          {
            "_displayName_": "Course Requirement #330",
            "_keyword_": "course_requirement",
            "component": {
              "UUID": "f03fa8ee-b536-367d-8719-26b4976ee543",
              "_displayName_": "Basics - Validating Your Syntax",
              "_keyword_": "content_component",
              "content": "<h2 id=\"toc_0\">Introduction:</h2>\r\n<p>As you start to write and edit your own Puppet code, you want to be sure your syntax is correct so it can be understood by Puppet. The best place to learn how to correctly write your Puppet code is in the <a href=\"https://puppet.com/docs/puppet/5.3/lang_visual_index.html\">Puppet Docs</a>.</p>\r\n<p>For now, review the following video about syntax. Pay particular attention to the rules regarding use of curly braces, quotes, and commas.</p>\r\n<script src=\"https://fast.wistia.com/embed/medias/6te1c1owui.jsonp\" async></script><script src=\"https://fast.wistia.com/assets/external/E-v1.js\" async></script><div class=\"wistia_responsive_padding\" style=\"padding:56.25% 0 0 0;position:relative;\"><div class=\"wistia_responsive_wrapper\" style=\"height:100%;left:0;position:absolute;top:0;width:100%;\"><div class=\"wistia_embed wistia_async_6te1c1owui seo=false videoFoam=true\" style=\"height:100%;width:100%\">&nbsp;</div></div></div>\r\n<blockquote><hr />\r\n<p><strong>Protip</strong>: Often you and your peers will want to agree on things like using spaces or tabs in your code; number of indents to use; or whether or not you like the trailing comma. Puppet will interpret your code the same regardless of spaces, tabs, or indents. But to have some consistency to how code is written, you might want to use what is referred to as a <strong>style guide</strong>. Puppet's <a href=\"https://puppet.com/docs/puppet/5.3/style_guide.html\">style guide</a> helps Puppet community members write code to be easily shared and read by other community members.</p>\r\n<p>Luckily, there is a command you can run to check a file containing Puppet code and let you know if the syntax is correct or not. This command is <code>puppet parser validate</code> followed by the name of the file that you want to check. For example, if you have a file called <code>default.pp</code> containing Puppet code that you want to check, you'd type <code>puppet parser validate default.pp</code> on the command line.</p>\r\n<p>Another tool to bookmark is the <a href=\"https://validate.puppet.com/\" target=\"_blank\">Puppet Validator</a>&nbsp;where you can paste Puppet code and test its validity.</p>\r\n</blockquote>\r\n<p>When you&rsquo;re ready to move on, continue to the task below to check the syntax of a file containing Puppet code using the <code>puppet parser validate</code> command.</p>\r\n<h2 id=\"toc_1\">Task:</h2>\r\nComplete the exercise below. Use any error output to fix any syntax errors and rerun the command if necessary.</p>\r\n<p><iframe src=\"https://magicbox.whatsaranjit.com/syntax/validating_your_syntax\" width=\"100%\" height=\"500px\" frameborder=\"0\"></iframe></p>\r\n<p><strong>Pro tip:</strong> A quick way to validate your code in the real world is to test it with our <a href=\"https://validate.puppet.com/\">Puppet Code Validator</a>, which comes with a handy customizable linter function.</p>",
              "created": "2017-11-09 14:30:38",
              "createdById": 49633,
              "customField01": "",
              "customField02": "",
              "customField03": "",
              "customField04": "",
              "customField05": "",
              "customField06": "",
              "customField07": "",
              "customField08": "",
              "customField09": "",
              "customField10": "",
              "deprecatedBy": "",
              "duration": {
                "days": 0,
                "minutesPerDay": 0
              },
              "generateCertificate": "DEFAULT",
              "generateProofOfCompletion": "DEFAULT",
              "id": 334,
              "modified": "2018-01-16 15:59:01",
              "modifiedById": 49633,
              "name": "Basics - Validating Your Syntax",
              "orderNumber": 0,
              "price": {
                "amount": 0.0,
                "currency": "USD"
              },
              "primaryCategoryId": 7,
              "status": "ACTIVE_COMPONENT",
              "urlName": "basics-validating-your-syntax",
              "visibility": "HIDDEN"
            },
            "componentId": 334,
            "componentUUID": "f03fa8ee-b536-367d-8719-26b4976ee543",
            "created": "2017-12-04 14:42:19",
            "createdById": 49633,
            "id": 330,
            "modified": "2018-01-25 15:53:56",
            "modifiedById": 49633,
            "name": "Basics - Validating Your Syntax",
            "pathwayId": 335,
            "position": 1
          },
          {
            "_displayName_": "Course Requirement #328",
            "_keyword_": "course_requirement",
            "component": {
              "UUID": "da370d5b-86ab-3449-b15d-68578072dec5",
              "_displayName_": "Basics - Modifying Attributes",
              "_keyword_": "content_component",
              "content": "<p>&nbsp;</p>\r\n<h2 id=\"toc_0\">Introduction:</h2>\r\n<p>Now that you can see all the attributes Puppet knows about the file at <code>/etc/motd</code>, you also know the things you can manage about that file. To change the value of an attribute using Puppet, you will use the same syntax from the previous exercise, replacing the old values with your new values.</p>\r\n<h2 id=\"toc_1\">Task:</h2>\r\n<p><iframe src=\"https://magicbox.whatsaranjit.com/syntax/modifying_attributes\" width=\"100%\" height=\"500px\" frameborder=\"0\"></iframe></p>",
              "created": "2017-11-09 14:27:02",
              "createdById": 49633,
              "customField01": "",
              "customField02": "",
              "customField03": "",
              "customField04": "",
              "customField05": "",
              "customField06": "",
              "customField07": "",
              "customField08": "",
              "customField09": "",
              "customField10": "",
              "deprecatedBy": "",
              "duration": {
                "days": 0,
                "minutesPerDay": 0
              },
              "generateCertificate": "DEFAULT",
              "generateProofOfCompletion": "DEFAULT",
              "id": 332,
              "modified": "2018-01-12 16:04:25",
              "modifiedById": 49633,
              "name": "Basics - Modifying Attributes",
              "orderNumber": 0,
              "price": {
                "amount": 0.0,
                "currency": "USD"
              },
              "primaryCategoryId": 7,
              "status": "ACTIVE_COMPONENT",
              "urlName": "basics-modifying-attributes",
              "visibility": "HIDDEN"
            },
            "componentId": 332,
            "componentUUID": "da370d5b-86ab-3449-b15d-68578072dec5",
            "created": "2017-12-04 14:41:52",
            "createdById": 49633,
            "id": 328,
            "modified": "2018-01-25 15:53:57",
            "modifiedById": 49633,
            "name": "Basics - Modifying Attributes",
            "pathwayId": 335,
            "position": 2
          }
        ],
        "courseInfo": "",
        "created": "2017-11-09 14:32:03",
        "createdById": 49633,
        "customField01": "",
        "customField02": "",
        "customField03": "",
        "customField04": "",
        "customField05": "",
        "customField06": "",
        "customField07": "",
        "customField08": "",
        "customField09": "",
        "customField10": "",
        "deprecatedBy": "",
        "duration": {
          "days": 0,
          "minutesPerDay": 0
        },
        "generateCertificate": "DEFAULT",
        "generateProofOfCompletion": "DEFAULT",
        "id": 335,
        "modified": "2017-12-01 15:56:12",
        "modifiedById": 49633,
        "name": "Basics",
        "orderNumber": 0,
        "price": {
          "amount": 0.0,
          "currency": "USD"
        },
        "primaryCategoryId": 7,
        "status": "ACTIVE_COMPONENT",
        "type": {
          "_displayName_": "Module",
          "_keyword_": "course_pathway_type",
          "created": "2015-06-14 23:21:43",
          "id": 3,
          "modified": "2015-06-14 23:21:43",
          "name": "Module",
          "rootType": false,
          "supportedComponentTypes": [
            "e_learning_component",
            "course",
            "content_component",
            "exam_component"
          ]
        },
        "typeId": 3,
        "urlName": "basics",
        "visibility": "HIDDEN"
      },
      "componentId": 335,
      "componentUUID": "89dfacc2-363c-37f9-8439-f9735fe08344",
      "created": "2017-11-09 14:32:04",
      "createdById": 49633,
      "id": 298,
      "modified": "2018-01-25 15:53:56",
      "modifiedById": 49633,
      "name": "Basics",
      "pathwayId": 328,
      "position": 3
    },
    {
      "_displayName_": "Course Requirement #309",
      "_keyword_": "course_requirement",
      "component": {
        "UUID": "39ec391a-be13-3d34-b557-38ffe4c845ec",
        "_displayName_": "Variables",
        "_keyword_": "course_pathway",
        "components": [
          {
            "_displayName_": "Course Requirement #357",
            "_keyword_": "course_requirement",
            "component": {
              "UUID": "43f335a6-51ac-32f2-b72b-8e951c4f3b51",
              "_displayName_": "Variables - Putting Them To Use",
              "_keyword_": "content_component",
              "content": "<h2 id=\"toc_0\">Introduction:</h2>\r\n<p>Currently, the file you have been working on in this course is hard-coded to be located at <code>/etc/motd</code>. As you learned, using variables rather than hard-coding information about your file is a better method to write code because it reduces the likelihood of typos and bugs. Try using a variable instead.</p>\r\n<blockquote><strong>Protip:</strong> You can use comments in your code by using a hash like this: <code># this is what a comment looks like</code>. Comments help to organize your code and also to communicate with other people who read your code.</blockquote>\r\n<h2 id=\"toc_1\">Task:</h2>\r\n<p>Set the <code>$motd_file</code> variable to <code>/etc/motd</code>.</p>\r\n<p><iframe src=\"https://magicbox.whatsaranjit.com/variables/putting_them_to_use\" width=\"100%\" height=\"500px\" frameborder=\"0\"></iframe></p>",
              "created": "2017-12-04 13:39:41",
              "createdById": 49633,
              "customField01": "",
              "customField02": "",
              "customField03": "",
              "customField04": "",
              "customField05": "",
              "customField06": "",
              "customField07": "",
              "customField08": "",
              "customField09": "",
              "customField10": "",
              "deprecatedBy": "",
              "duration": {
                "days": 0,
                "minutesPerDay": 5
              },
              "generateCertificate": "DEFAULT",
              "generateProofOfCompletion": "DEFAULT",
              "id": 349,
              "modified": "2018-01-12 16:56:26",
              "modifiedById": 49633,
              "name": "Variables - Putting Them To Use",
              "orderNumber": 0,
              "price": {
                "amount": 0.0,
                "currency": "USD"
              },
              "primaryCategoryId": 7,
              "status": "ACTIVE_COMPONENT",
              "urlName": "variables---putting-them-to-use",
              "visibility": "HIDDEN"
            },
            "componentId": 349,
            "componentUUID": "43f335a6-51ac-32f2-b72b-8e951c4f3b51",
            "created": "2017-12-21 17:04:44",
            "createdById": 31489,
            "id": 357,
            "modified": "2018-01-25 15:53:56",
            "modifiedById": 49633,
            "name": "Variables - Putting Them To Use",
            "pathwayId": 343,
            "position": 0
          },
          {
            "_displayName_": "Course Requirement #321",
            "_keyword_": "course_requirement",
            "component": {
              "UUID": "626a940c-c2b3-3f66-ab5c-0eab74f44cf2",
              "_displayName_": "Variables - What Are They?",
              "_keyword_": "content_component",
              "content": "<h2 id=\"toc_0\">Introduction:</h2>\r\n<p>As you start writing more Puppet code, you will likely find yourself repeating the same values over and over. This is redundant, time consuming, and can lead to spelling errors, or bugs, in your code. To save effort and decrease the likelihood of typos, assign <strong>variables</strong> to those repeating values. Variables make it easier to manage those values by letting you update one thing instead of having to update many repeating things. This also ensures consistency throughout your code.</p>\r\n<h2 id=\"toc_1\">Task:</h2>\r\n<p>Watch the following video to learn how and why you should use variables.</p>\r\n<script src=\"https://fast.wistia.com/embed/medias/yv1ai5j8h1.jsonp\" async></script><script src=\"https://fast.wistia.com/assets/external/E-v1.js\" async></script><div class=\"wistia_responsive_padding\" style=\"padding:56.25% 0 0 0;position:relative;\"><div class=\"wistia_responsive_wrapper\" style=\"height:100%;left:0;position:absolute;top:0;width:100%;\"><div class=\"wistia_embed wistia_async_yv1ai5j8h1 seo=false videoFoam=true\" style=\"height:100%;width:100%\">&nbsp;</div></div></div>",
              "created": "2017-11-10 15:17:54",
              "createdById": 49633,
              "customField01": "",
              "customField02": "",
              "customField03": "",
              "customField04": "",
              "customField05": "",
              "customField06": "",
              "customField07": "",
              "customField08": "",
              "customField09": "",
              "customField10": "",
              "deprecatedBy": "",
              "duration": {
                "days": 0,
                "minutesPerDay": 0
              },
              "generateCertificate": "DEFAULT",
              "generateProofOfCompletion": "DEFAULT",
              "id": 339,
              "modified": "2018-01-16 15:44:14",
              "modifiedById": 49633,
              "name": "Variables - What Are They?",
              "orderNumber": 0,
              "price": {
                "amount": 0.0,
                "currency": "USD"
              },
              "primaryCategoryId": 7,
              "status": "ACTIVE_COMPONENT",
              "urlName": "variables-what-are-they",
              "visibility": "HIDDEN"
            },
            "componentId": 339,
            "componentUUID": "626a940c-c2b3-3f66-ab5c-0eab74f44cf2",
            "created": "2017-12-04 14:20:27",
            "createdById": 49633,
            "id": 321,
            "modified": "2018-01-25 15:53:57",
            "modifiedById": 49633,
            "name": "Variables - What Are They?",
            "pathwayId": 343,
            "position": 1
          },
          {
            "_displayName_": "Course Requirement #365",
            "_keyword_": "course_requirement",
            "component": {
              "UUID": "ac3157bc-242d-3037-bfe6-4cdb725059d8",
              "_displayName_": "Facts - Using Logic With Facts",
              "_keyword_": "content_component",
              "content": "<h2 id=\"toc_1\">Introduction:</h2>\r\n<p>You learned that you can use variables and facts to dynamically set values in your code. The next step is to use variables and facts to make decisions in your code. Here you'll learn to write code that follows logic like <q>If my operating system is Windows, do this. Otherwise, do something else.</q> You can use if/else syntax to do this in your code. Take a look at the following layout:</p>\r\n<div>\r\n<pre><code class=\"language-none\">if $some_fact == 'some_value' {\r\n  $my_variable = 'yes'\r\n}\r\nelse {\r\n  $my_variable = 'no'\r\n}</code></pre>\r\n</div>\r\n<h2 id=\"toc_2\">Task:</h2>\r\n<p>Complete the exercise below. Notice that the $hello_file variable is used in the file resource declaration.</p>\r\n<p><iframe src=\"https://magicbox.whatsaranjit.com/facts/using_logic_with_facts\" width=\"100%\" height=\"500px\" frameborder=\"0\"></iframe></p>",
              "created": "2017-12-04 13:50:38",
              "createdById": 49633,
              "customField01": "",
              "customField02": "",
              "customField03": "",
              "customField04": "",
              "customField05": "",
              "customField06": "",
              "customField07": "",
              "customField08": "",
              "customField09": "",
              "customField10": "",
              "deprecatedBy": "",
              "duration": {
                "days": 0,
                "minutesPerDay": 0
              },
              "generateCertificate": "DEFAULT",
              "generateProofOfCompletion": "DEFAULT",
              "id": 351,
              "modified": "2018-01-12 14:55:33",
              "modifiedById": 49633,
              "name": "Facts - Using Logic With Facts",
              "orderNumber": 0,
              "price": {
                "amount": 0.0,
                "currency": "USD"
              },
              "primaryCategoryId": 7,
              "status": "ACTIVE_COMPONENT",
              "urlName": "facts-using-logic-with-facts",
              "visibility": "HIDDEN"
            },
            "componentId": 351,
            "componentUUID": "ac3157bc-242d-3037-bfe6-4cdb725059d8",
            "created": "2018-01-25 15:45:14",
            "createdById": 31489,
            "id": 365,
            "modified": "2018-01-25 15:53:57",
            "modifiedById": 49633,
            "name": "Facts - Using Logic With Facts",
            "pathwayId": 343,
            "position": 2
          },
          {
            "_displayName_": "Course Requirement #366",
            "_keyword_": "course_requirement",
            "component": {
              "UUID": "fa0e1416-e6d3-3a0e-b11e-818cd9392dcf",
              "_displayName_": "Facts - What Are They?",
              "_keyword_": "content_component",
              "content": "<!DOCTYPE html>\r\n<html>\r\n\r\n<head>\r\n\r\n<meta charset=\"utf-8\">\r\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\">\r\n<title>340 Facts_whatarethey</title>\r\n\r\n\r\n\r\n</head>\r\n\r\n<body>\r\n\r\n<h2 id=\"toc_0\">Introduction:</h2>\r\n\r\n<p>Puppet automatically creates a set of variables for you called <strong>facts</strong>. <a href=\"https://puppet.com/docs/puppet/5.3/lang_facts_and_builtin_vars.html\">Facts</a> contain useful information integral to a node, such as its operating system, its hostname, or its IP address. Use this information to create conditional logic: make code behave a certain way based on a set of conditions. To see a list of all the facts available, enter the command <code>facter -p</code> on any system.</p>\r\n\r\n<h2 id=\"toc_1\">Task:</h2>\r\n\r\n<p>Type the command <code>facter -p</code> to get a list of all facts available.</p>\r\n\r\n<p>\r\n<iframe src=\"https://magicbox.whatsaranjit.com/facts/what_are_they\" width=\"100%\" height=\"500px\" frameborder=\"0\"></iframe></p>\r\n\r\n\r\n\r\n\r\n</body>\r\n\r\n</html>",
              "created": "2017-11-10 15:18:26",
              "createdById": 49633,
              "customField01": "",
              "customField02": "",
              "customField03": "",
              "customField04": "",
              "customField05": "",
              "customField06": "",
              "customField07": "",
              "customField08": "",
              "customField09": "",
              "customField10": "",
              "deprecatedBy": "",
              "duration": {
                "days": 0,
                "minutesPerDay": 0
              },
              "generateCertificate": "DEFAULT",
              "generateProofOfCompletion": "DEFAULT",
              "id": 340,
              "modified": "2018-01-12 17:07:06",
              "modifiedById": 49633,
              "name": "Facts - What Are They?",
              "orderNumber": 0,
              "price": {
                "amount": 0.0,
                "currency": "USD"
              },
              "primaryCategoryId": 7,
              "status": "ACTIVE_COMPONENT",
              "urlName": "facts-what-are-they",
              "visibility": "HIDDEN"
            },
            "componentId": 340,
            "componentUUID": "fa0e1416-e6d3-3a0e-b11e-818cd9392dcf",
            "created": "2018-01-25 15:45:35",
            "createdById": 31489,
            "id": 366,
            "modified": "2018-01-25 15:53:57",
            "modifiedById": 49633,
            "name": "Facts - What Are They?",
            "pathwayId": 343,
            "position": 3
          },
          {
            "_displayName_": "Course Requirement #367",
            "_keyword_": "course_requirement",
            "component": {
              "UUID": "5fb2222c-f99f-3cf4-a55f-4d0c72b040b5",
              "_displayName_": "Facts - Working With Facts",
              "_keyword_": "content_component",
              "content": "<h2 id=\"toc_1\">Introduction:</h2>\r\n<p>Most facts contain a single value like <code>\"hostname\":</code> <code>\"host.puppet.com\"</code> or <code>\"kernel\": \"Linux\"</code>. One way to use these facts is to create server-specific attributes.</p>\r\n<p>Example:</p>\r\n<div>\r\n<pre><code class=\"language-none\">file { '/etc/motd':\r\n  content =&gt; \"My hostname: ${hostname}\",\r\n}</code></pre>\r\n</div>\r\n<p>In this example, any system using this code will have its own hostname printed into the file. In this way, you can have server-specific outcomes with a single piece of code. This means you don't have to rewrite your code for every single machine you're managing.</p>\r\n<h2 id=\"toc_2\">Task:</h2>\r\n<p><iframe src=\"https://magicbox.whatsaranjit.com/facts/working_with_facts\" width=\"100%\" height=\"500px\" frameborder=\"0\"></iframe></p>",
              "created": "2017-12-04 13:47:27",
              "createdById": 49633,
              "customField01": "",
              "customField02": "",
              "customField03": "",
              "customField04": "",
              "customField05": "",
              "customField06": "",
              "customField07": "",
              "customField08": "",
              "customField09": "",
              "customField10": "",
              "deprecatedBy": "",
              "duration": {
                "days": 0,
                "minutesPerDay": 0
              },
              "generateCertificate": "DEFAULT",
              "generateProofOfCompletion": "DEFAULT",
              "id": 350,
              "modified": "2018-01-12 16:19:22",
              "modifiedById": 49633,
              "name": "Facts - Working With Facts",
              "orderNumber": 0,
              "price": {
                "amount": 0.0,
                "currency": "USD"
              },
              "primaryCategoryId": 7,
              "status": "ACTIVE_COMPONENT",
              "urlName": "facts-working-with-facts",
              "visibility": "HIDDEN"
            },
            "componentId": 350,
            "componentUUID": "5fb2222c-f99f-3cf4-a55f-4d0c72b040b5",
            "created": "2018-01-25 15:45:52",
            "createdById": 31489,
            "id": 367,
            "modified": "2018-01-25 15:53:57",
            "modifiedById": 49633,
            "name": "Facts - Working With Facts",
            "pathwayId": 343,
            "position": 4
          },
          {
            "_displayName_": "Course Requirement #368",
            "_keyword_": "course_requirement",
            "component": {
              "UUID": "5f2ff0fb-6fce-3298-b9fa-890bf07060ba",
              "_displayName_": "Facts - Working With Data: Overview of Arrays",
              "_keyword_": "content_component",
              "content": "<h2>Introduction:</h2>\r\n<p>Other facts contain more complex values. They might contain data structures like arrays or hashes. If you want to learn more about arrays and hashes before diving in, check out the syntax section in <a href=\"https://puppet.com/docs/puppet/5.3/lang_data_array.html\">the Puppet docs</a>.</p>\r\n<h3 id=\"toc_2\">Arrays:</h3>\r\n<p>Arrays allow you to define and work with a large set of the same type of data. An array is a series of values that looks like <code>['one', 'two', 'three']</code>, denoted by square brackets. Puppet is like most programming languages and uses zero-based index counting: the first element of any series of values is assigned the index 0&nbsp;instead of the index 1.&nbsp;You can retrieve values from an array using the position, or index, that it is in. For example, to retrieve the first value in an array variable&nbsp; <code>$array</code>, you would access it using the index 0, or <code>$array[0].&nbsp;</code></p>\r\n<h3 id=\"toc_3\">Create an array</h3>\r\n<div>\r\n<pre><code class=\"language-none\">$my_array = ['one', 'two', 'three']\r\n\r\n# Access values inside array\r\n\r\n$first  = $my_array[0]              # equal to 'one'\r\n\r\n$second = $my_array[1]              # equal to 'two'\r\n\r\n$third  = $my_array[2]              # equal to 'three'\r\n\r\n**Note:** The first value in the array begins at index 0, not index 1.</code></pre>\r\n</div>\r\n<h2 id=\"toc_4\">Task:</h2>\r\n<p><iframe src=\"https://magicbox.whatsaranjit.com/facts/working_with_arrays\" width=\"100%\" height=\"500px\" frameborder=\"0\"></iframe></p>",
              "created": "2017-12-04 13:55:15",
              "createdById": 49633,
              "customField01": "",
              "customField02": "",
              "customField03": "",
              "customField04": "",
              "customField05": "",
              "customField06": "",
              "customField07": "",
              "customField08": "",
              "customField09": "",
              "customField10": "",
              "deprecatedBy": "",
              "duration": {
                "days": 0,
                "minutesPerDay": 0
              },
              "generateCertificate": "DEFAULT",
              "generateProofOfCompletion": "DEFAULT",
              "id": 353,
              "modified": "2018-01-12 15:26:54",
              "modifiedById": 49633,
              "name": "Facts - Working With Data: Overview of Arrays",
              "orderNumber": 0,
              "price": {
                "amount": 0.0,
                "currency": "USD"
              },
              "primaryCategoryId": 7,
              "status": "ACTIVE_COMPONENT",
              "urlName": "facts-working-with-data",
              "visibility": "HIDDEN"
            },
            "componentId": 353,
            "componentUUID": "5f2ff0fb-6fce-3298-b9fa-890bf07060ba",
            "created": "2018-01-25 15:47:23",
            "createdById": 31489,
            "id": 368,
            "modified": "2018-01-25 15:53:57",
            "modifiedById": 49633,
            "name": "Facts - Working With Data: Overview of Arrays",
            "pathwayId": 343,
            "position": 5
          }
        ],
        "courseInfo": "",
        "created": "2017-11-10 15:19:57",
        "createdById": 49633,
        "customField01": "",
        "customField02": "",
        "customField03": "",
        "customField04": "",
        "customField05": "",
        "customField06": "",
        "customField07": "",
        "customField08": "",
        "customField09": "",
        "customField10": "",
        "deprecatedBy": "",
        "duration": {
          "days": 0,
          "minutesPerDay": 0
        },
        "generateCertificate": "DEFAULT",
        "generateProofOfCompletion": "DEFAULT",
        "id": 343,
        "modified": "2017-11-14 17:00:18",
        "modifiedById": 38,
        "name": "Variables",
        "orderNumber": 0,
        "price": {
          "amount": 0.0,
          "currency": "USD"
        },
        "primaryCategoryId": 7,
        "status": "ACTIVE_COMPONENT",
        "type": {
          "_displayName_": "Module",
          "_keyword_": "course_pathway_type",
          "created": "2015-06-14 23:21:43",
          "id": 3,
          "modified": "2015-06-14 23:21:43",
          "name": "Module",
          "rootType": false,
          "supportedComponentTypes": [
            "e_learning_component",
            "course",
            "content_component",
            "exam_component"
          ]
        },
        "typeId": 3,
        "urlName": "variables",
        "visibility": "HIDDEN"
      },
      "componentId": 343,
      "componentUUID": "39ec391a-be13-3d34-b557-38ffe4c845ec",
      "created": "2017-11-10 15:19:57",
      "createdById": 49633,
      "id": 309,
      "modified": "2018-01-25 15:53:57",
      "modifiedById": 49633,
      "name": "Variables",
      "pathwayId": 328,
      "position": 4
    },
    {
      "_displayName_": "Course Requirement #342",
      "_keyword_": "course_requirement",
      "component": {
        "UUID": "42c6f997-18b5-3326-bbfa-b07db3b2245e",
        "_displayName_": "Core Types",
        "_keyword_": "course_pathway",
        "components": [
          {
            "_displayName_": "Course Requirement #352",
            "_keyword_": "course_requirement",
            "component": {
              "UUID": "3d040b1a-a653-3a47-ba68-5096cc7c03dd",
              "_displayName_": "Core Types - Overview",
              "_keyword_": "content_component",
              "content": "<h2>Introduction:</h2>\r\nCore types are the most essential types you will use to interact with Puppet and tell it what to do. They are ready to go when you install Puppet, meaning you don’t have to do anything to set them up. </p> \r\n<p>One example of a core type you have gotten some practice working with previously in this course is the <code>file</code> type. In the next two units, you will get some practice working with the <code>package</code> and <code>service</code> types as well. The full list of all core types is posted on our <a href=\"https://puppet.com/docs/puppet/5.3/type.html\">type reference page</a>.</p>",
              "created": "2017-12-19 09:21:15",
              "createdById": 49633,
              "customField01": "",
              "customField02": "",
              "customField03": "",
              "customField04": "",
              "customField05": "",
              "customField06": "",
              "customField07": "",
              "customField08": "",
              "customField09": "",
              "customField10": "",
              "deprecatedBy": "",
              "duration": {
                "days": 0,
                "minutesPerDay": 0
              },
              "generateCertificate": "DEFAULT",
              "generateProofOfCompletion": "DEFAULT",
              "id": 373,
              "modified": "2018-01-16 12:16:06",
              "modifiedById": 49633,
              "name": "Core Types - Overview",
              "orderNumber": 0,
              "price": {
                "amount": 0.0,
                "currency": "USD"
              },
              "primaryCategoryId": 7,
              "status": "DISABLED",
              "urlName": "core-types---overview",
              "visibility": "HIDDEN"
            },
            "componentId": 373,
            "componentUUID": "3d040b1a-a653-3a47-ba68-5096cc7c03dd",
            "created": "2017-12-19 09:22:13",
            "createdById": 49633,
            "id": 352,
            "modified": "2018-01-25 15:53:56",
            "modifiedById": 49633,
            "name": "Core Types - Overview",
            "pathwayId": 365,
            "position": 0
          },
          {
            "_displayName_": "Course Requirement #353",
            "_keyword_": "course_requirement",
            "component": {
              "UUID": "b35f88c7-8cda-3be5-81c7-7354ad35e37e",
              "_displayName_": "Core Types - Package Type",
              "_keyword_": "content_component",
              "content": "<h2 id=\"toc_1\">Introduction:</h2>\r\n<p>This type manages software packages. Some important attributes of this type include <code>name</code>, <code>ensure</code>, <code>source</code>, and <code>provider</code>. For example:</p>\r\n<div>\r\n<pre><code class=\"language-none\">package { 'openssh-server':\r\n  ensure =&gt; installed,\r\n}</code></pre>\r\n</div>\r\n<h2 id=\"toc_2\">Task:</h2>\r\n<p>Enter the <code>puppet resource</code> command to see all the attributes of the <code>package</code> named <code>puppet</code>.</p>\r\n<p><iframe src=\"https://magicbox.whatsaranjit.com/resources/exploring_package\" width=\"100%\" height=\"500px\" frameborder=\"0\"></iframe></p>",
              "created": "2017-12-19 09:28:38",
              "createdById": 49633,
              "customField01": "",
              "customField02": "",
              "customField03": "",
              "customField04": "",
              "customField05": "",
              "customField06": "",
              "customField07": "",
              "customField08": "",
              "customField09": "",
              "customField10": "",
              "deprecatedBy": "",
              "duration": {
                "days": 0,
                "minutesPerDay": 0
              },
              "generateCertificate": "DEFAULT",
              "generateProofOfCompletion": "DEFAULT",
              "id": 374,
              "modified": "2018-01-12 16:15:45",
              "modifiedById": 49633,
              "name": "Core Types - Package Type",
              "orderNumber": 0,
              "price": {
                "amount": 0.0,
                "currency": "USD"
              },
              "primaryCategoryId": 7,
              "status": "DISABLED",
              "urlName": "core-types---package-type",
              "visibility": "HIDDEN"
            },
            "componentId": 374,
            "componentUUID": "b35f88c7-8cda-3be5-81c7-7354ad35e37e",
            "created": "2017-12-19 09:29:27",
            "createdById": 49633,
            "id": 353,
            "modified": "2018-01-25 15:53:56",
            "modifiedById": 49633,
            "name": "Core Types - Package Type",
            "pathwayId": 365,
            "position": 1
          },
          {
            "_displayName_": "Course Requirement #354",
            "_keyword_": "course_requirement",
            "component": {
              "UUID": "aa4fc904-68ff-3a54-a74e-98ac8159cbd6",
              "_displayName_": "Core Types - Service Type",
              "_keyword_": "content_component",
              "content": "<body>\r\n\r\n<h2 id=\"toc_1\">Introduction:</h2>\r\n\r\n<p>This type manages services running on the node. Some important attributes include <code>name</code>, <code>ensure</code>, <code>enable</code>, <code>hasrestart</code>, and <code>hasstatus</code>.</p>\r\n\r\n<div><pre><code class=\"language-none\">service { &#39;sshd&#39;:\r\n  ensure =&gt; running,\r\n  enable =&gt; true,\r\n}</code></pre></div>\r\n\r\n<h2 id=\"toc_2\">Task:</h2>\r\n\r\n<p>Enter the <code>puppet resource</code> command to see all the attributes of the <code>service</code> named <code>puppet</code>. </p>\r\n\r\n<p><iframe src=\"https://magicbox.whatsaranjit.com/resources/exploring_service\" width=\"100%\" height=\"500px\" frameborder=\"0\"></iframe></p>\r\n\r\n\r\n\r\n\r\n</body>",
              "created": "2017-12-19 09:42:25",
              "createdById": 49633,
              "customField01": "",
              "customField02": "",
              "customField03": "",
              "customField04": "",
              "customField05": "",
              "customField06": "",
              "customField07": "",
              "customField08": "",
              "customField09": "",
              "customField10": "",
              "deprecatedBy": "",
              "duration": {
                "days": 0,
                "minutesPerDay": 0
              },
              "generateCertificate": "DEFAULT",
              "generateProofOfCompletion": "DEFAULT",
              "id": 375,
              "modified": "2018-01-12 16:17:14",
              "modifiedById": 49633,
              "name": "Core Types - Service Type",
              "orderNumber": 0,
              "price": {
                "amount": 0.0,
                "currency": "USD"
              },
              "primaryCategoryId": 7,
              "status": "DISABLED",
              "urlName": "core-types---service-type",
              "visibility": "HIDDEN"
            },
            "componentId": 375,
            "componentUUID": "aa4fc904-68ff-3a54-a74e-98ac8159cbd6",
            "created": "2017-12-19 09:42:48",
            "createdById": 49633,
            "id": 354,
            "modified": "2018-01-25 15:53:56",
            "modifiedById": 49633,
            "name": "Core Types - Service Type",
            "pathwayId": 365,
            "position": 2
          }
        ],
        "courseInfo": "",
        "created": "2017-12-14 16:00:46",
        "createdById": 49633,
        "customField01": "",
        "customField02": "",
        "customField03": "",
        "customField04": "",
        "customField05": "",
        "customField06": "",
        "customField07": "",
        "customField08": "",
        "customField09": "",
        "customField10": "",
        "deprecatedBy": "",
        "duration": {
          "days": 0,
          "minutesPerDay": 0
        },
        "generateCertificate": "DEFAULT",
        "generateProofOfCompletion": "DEFAULT",
        "id": 365,
        "modified": "2017-12-14 16:01:03",
        "modifiedById": 49633,
        "name": "Core Types",
        "orderNumber": 0,
        "price": {
          "amount": 0.0,
          "currency": "USD"
        },
        "primaryCategoryId": 7,
        "status": "ACTIVE_COMPONENT",
        "type": {
          "_displayName_": "Module",
          "_keyword_": "course_pathway_type",
          "created": "2015-06-14 23:21:43",
          "id": 3,
          "modified": "2015-06-14 23:21:43",
          "name": "Module",
          "rootType": false,
          "supportedComponentTypes": [
            "e_learning_component",
            "course",
            "content_component",
            "exam_component"
          ]
        },
        "typeId": 3,
        "urlName": "core-types",
        "visibility": "HIDDEN"
      },
      "componentId": 365,
      "componentUUID": "42c6f997-18b5-3326-bbfa-b07db3b2245e",
      "created": "2017-12-14 16:00:47",
      "createdById": 49633,
      "id": 342,
      "modified": "2018-01-25 15:53:57",
      "modifiedById": 49633,
      "name": "Core Types",
      "pathwayId": 328,
      "position": 5
    },
    {
      "_displayName_": "Course Requirement #315",
      "_keyword_": "course_requirement",
      "component": {
        "UUID": "8547b3fc-a265-3b93-be1b-9abe1ff61581",
        "_displayName_": "Package File Service",
        "_keyword_": "course_pathway",
        "components": [
          {
            "_displayName_": "Course Requirement #355",
            "_keyword_": "course_requirement",
            "component": {
              "UUID": "4cf15e78-a07f-3a51-84f1-6dce4503ee39",
              "_displayName_": "Package File Service - Relationships",
              "_keyword_": "content_component",
              "content": "<h2 id=\"toc_0\">Introduction:</h2>\r\n<p>Now that you have looked at the package, file, and service resource types, try using them together. Consider the following scenario:</p>\r\n<ul>\r\n<li>\r\n<p>You want to deploy an application called Myapp.</p>\r\n</li>\r\n<li>\r\n<p>You can install Myapp using the myapp package.</p>\r\n</li>\r\n<li>\r\n<p>After you install myapp, you can configure it by editing settings in <code>/myapp/config.json</code>.</p>\r\n</li>\r\n<li>\r\n<p>After you configure Myapp, start the myapp service to start your application.</p>\r\n</li>\r\n</ul>\r\n<p>This is a common scenario for software such as IIS, MySQL, Tomcat, or Redis. In all cases, you have to consider ordering. Puppet must first install the package, then edit the configuration file, and finally attempt to start the service. Otherwise, if Puppet tried a service that wasn't yet installed, it would generate an error like <q>No such service exists.</q> You can be very explicit about this ordering in your code.</p>\r\n<p>Example:</p>\r\n<div>\r\n<pre><code class=\"language-none\">package { 'myapp':\r\n  ensure =&gt; installed,\r\n}\r\nfile { '/myapp/config.json':\r\n  ensure  =&gt; file,\r\n  content =&gt; '{ \"configuration\": \"some setting\"}',\r\n  require =&gt; Package['myapp'],\r\n}</code></pre>\r\n</div>\r\n<p>The <code>require</code> attribute tells Puppet that the file resource needs the package resource to go first. Alternately, this can be written as:</p>\r\n<div>\r\n<pre><code class=\"language-none\">package { 'myapp':\r\n  ensure =&gt; installed,\r\n  before =&gt; File['/myapp/config.json'],\r\n}\r\nfile { '/myapp/config.json':\r\n  ensure  =&gt; file,\r\n  content =&gt; '{ \"configuration\": \"some setting\"}',\r\n}\r\n</code></pre>\r\n</div>\r\n<p>This example uses the <code>before</code> attribute to tell Puppet that the package resource must go before the file resource. Ultimately, these two examples do the exact same thing. Depending on your preference, you can write it either way.</p>\r\n<blockquote>\r\n<p id=\"toc_1\"><strong>Pro Tip:</strong></p>\r\n<p>When referring to another resource using <code>before</code> or <code>require</code>, the resource type is capitalized. Be sure you also note the syntax used for defining relationships:</p>\r\n</blockquote>\r\n<p style=\"text-align: center;\"><img src=\"/static/images/courses/syntax/342-anatomy-of-a-relationship-whitespace-copy.png\" alt=\"Puppet code block labelled with relationship, type, and title on bottom line of code block.\" width=\"700\" /></p>\r\n<h6 style=\"text-align: center;\"><a href=\"/static/images/courses/syntax/342-anatomy-of-a-relationship-whitespace-copy.png\" target=\"_blank\">Enlarge image</a></h6>\r\n<h2 id=\"toc_2\">Task:</h2>\r\n<p>Add <code>before</code> or <code>require</code> to the following code so that the package resource is managed first and the file resource is managed second.</p>\r\n<p><iframe src=\"https://magicbox.whatsaranjit.com/pfs/package_file\" width=\"100%\" height=\"500px\" frameborder=\"0\"></iframe></p>",
              "created": "2017-11-10 15:19:28",
              "createdById": 49633,
              "customField01": "",
              "customField02": "",
              "customField03": "",
              "customField04": "",
              "customField05": "",
              "customField06": "",
              "customField07": "",
              "customField08": "",
              "customField09": "",
              "customField10": "",
              "deprecatedBy": "",
              "duration": {
                "days": 0,
                "minutesPerDay": 0
              },
              "generateCertificate": "DEFAULT",
              "generateProofOfCompletion": "DEFAULT",
              "id": 342,
              "modified": "2018-01-12 16:22:06",
              "modifiedById": 49633,
              "name": "Package File Service - Relationships",
              "orderNumber": 0,
              "price": {
                "amount": 0.0,
                "currency": "USD"
              },
              "primaryCategoryId": 7,
              "status": "ACTIVE_COMPONENT",
              "urlName": "package-file-service",
              "visibility": "HIDDEN"
            },
            "componentId": 342,
            "componentUUID": "4cf15e78-a07f-3a51-84f1-6dce4503ee39",
            "created": "2017-12-19 10:26:13",
            "createdById": 49633,
            "id": 355,
            "modified": "2018-01-25 15:53:56",
            "modifiedById": 49633,
            "name": "Package File Service - Relationships",
            "pathwayId": 346,
            "position": 0
          },
          {
            "_displayName_": "Course Requirement #363",
            "_keyword_": "course_requirement",
            "component": {
              "UUID": "74c2c390-95ca-36c0-8a38-e01f100edcbf",
              "_displayName_": "Package File Service - Refresh Events",
              "_keyword_": "content_component",
              "content": "<h2 id=\"toc_0\">Introduction:</h2>\r\n<p>You have seen ways to edit an application's configuration file before you start its service. But what if you need to make a change to a service that is already running? Most software requires a restart after you edit the configuration file for that change to take effect. Puppet allows you to refresh using the <code>subscribe</code> or <code>notify</code>&nbsp;attributes.</p>\r\n<p>Puppet lets you use <code>notify</code> and <code>subscribe</code> to not only order resources, but send a <strong>refresh</strong>. Refreshing a resource means different things depending on the resource type. For example, when you refresh a service resource type, Puppet restarts the service. And when you refresh a mount resource type, Puppet remounts a file mount. You can try to refresh any type in Puppet, but not all of them will respond. Read the <a href=\"https://puppet.com/docs/puppet/5.3/lang_relationships.html#refreshing-and-notification\">Puppet docs</a> for more information about refreshing and notification.</p>\r\n<p>Example:</p>\r\n<div>\r\n<pre><code class=\"language-none\">package { 'myapp':\r\n  ensure =&gt; installed,\r\n}\r\nfile { '/myapp/config.json':\r\n  ensure  =&gt; file,\r\n  content =&gt; '{ \"configuration\": \"some setting\"}',\r\n  require =&gt; Package['myapp']\r\n}\r\nservice { 'myapp':\r\n  ensure    =&gt; running,\r\n  subscribe =&gt; File['/myapp/config.json'],\r\n}</code></pre>\r\n</div>\r\n<p>In this example, the <code>subscribe</code> attribute tells Puppet to manage the file resource before the service resource and to restart the service if the file resource changes. This can also be written like the following example:</p>\r\n<div>\r\n<pre><code class=\"language-none\">package { 'myapp':\r\n  ensure =&gt; installed,\r\n  before =&gt; File['/myapp/config.json'],\r\n}\r\nfile { '/myapp/config.json':\r\n  ensure  =&gt; file,\r\n  content =&gt; '{ \"configuration\": \"some setting\"}',\r\n  notify  =&gt; Service['myapp'],\r\n}\r\nservice { 'myapp':\r\n  ensure    =&gt; running,\r\n}</code></pre>\r\n</div>\r\n<p>This example uses the <code>notify</code> attribute instead of <code>subscribe</code> but the outcome is the same.</p>\r\n<p>If you want to use <code>before</code> and also send a refresh, use <code>notify</code>. If you want to use <code>require</code> and also receive a refresh, use <code>subscribe</code>.</p>\r\n<h2 id=\"toc_1\">Task:</h2>\r\n<p>Add <code>notify</code> or <code>subscribe</code> to the following code so that the service is restarted if the file resource is changed.</p>\r\n<p><iframe src=\"https://magicbox.whatsaranjit.com/pfs/file_service\" width=\"100%\" height=\"500px\" frameborder=\"0\"></iframe></p>",
              "created": "2018-01-10 11:09:44",
              "createdById": 31489,
              "customField01": "",
              "customField02": "",
              "customField03": "",
              "customField04": "",
              "customField05": "",
              "customField06": "",
              "customField07": "",
              "customField08": "",
              "customField09": "",
              "customField10": "",
              "deprecatedBy": "",
              "duration": {
                "days": 0,
                "minutesPerDay": 10
              },
              "generateCertificate": "DEFAULT",
              "generateProofOfCompletion": "DEFAULT",
              "id": 381,
              "modified": "2018-01-12 16:23:36",
              "modifiedById": 49633,
              "name": "Package File Service - Refresh Events",
              "orderNumber": 0,
              "price": {
                "amount": 0.0,
                "currency": "USD"
              },
              "primaryCategoryId": 7,
              "status": "ENABLED",
              "urlName": "package-file-service---refresh-events",
              "visibility": "PUBLIC"
            },
            "componentId": 381,
            "componentUUID": "74c2c390-95ca-36c0-8a38-e01f100edcbf",
            "created": "2018-01-10 11:10:20",
            "createdById": 31489,
            "id": 363,
            "modified": "2018-01-25 15:53:57",
            "modifiedById": 49633,
            "name": "Package File Service - Refresh Events",
            "pathwayId": 346,
            "position": 1
          },
          {
            "_displayName_": "Course Requirement #358",
            "_keyword_": "course_requirement",
            "component": {
              "UUID": "00446ca0-70eb-3da3-a30b-33188203e9a3",
              "_displayName_": "Package File Service - Putting it all together",
              "_keyword_": "content_component",
              "content": "<h2 id=\"toc_1\">Introduction:</h2>\r\n<p>You have now practiced creating resource relationships between a package and a file, and a file and service. Now put it all together in a common pattern called Package File Service.</p>\r\n<p>This pattern tells Puppet to do the following:</p>\r\n<ol>\r\n<li>First manage a package resource</li>\r\n<li>Next manage a file resource</li>\r\n<li>Finally manage a service resource</li>\r\n</ol>\r\n<p>The service will also restart if the file resource changes at all.</p>\r\n<p>Look at the below example. You will use the three resources and add the resource relationships to model the Package File Service pattern.</p>\r\n<div>\r\n<pre><code class=\"language-none\">package { 'httpd':\r\n  ensure =&gt; installed,\r\n}\r\nfile { '/etc/httpd/conf.d/httpd.conf':\r\n  ensure  =&gt; file,\r\n  content =&gt; 'Listen 80',\r\n}\r\nservice { 'httpd':\r\n  ensure =&gt; running,\r\n}</code></pre>\r\n</div>\r\n<h2 id=\"toc_2\">Task:</h2>\r\n<p>Add resource relationships to the following code so that the resources are managed in the order of package, file, service. The service should restart if the file resource is changed. You can choose between <code>before/require</code> and <code>notify/subscribe</code>.</p>\r\n<p><iframe src=\"https://magicbox.whatsaranjit.com/pfs/package_file_service\" width=\"100%\" height=\"500px\" frameborder=\"0\"></iframe></p>",
              "created": "2017-12-28 16:49:01",
              "createdById": 31489,
              "customField01": "",
              "customField02": "",
              "customField03": "",
              "customField04": "",
              "customField05": "",
              "customField06": "",
              "customField07": "",
              "customField08": "",
              "customField09": "",
              "customField10": "",
              "deprecatedBy": "",
              "duration": {
                "days": 0,
                "minutesPerDay": 30
              },
              "generateCertificate": "DEFAULT",
              "generateProofOfCompletion": "DEFAULT",
              "id": 379,
              "modified": "2018-01-12 16:25:42",
              "modifiedById": 49633,
              "name": "Package File Service - Putting it all together",
              "orderNumber": 0,
              "price": {
                "amount": 0.0,
                "currency": "USD"
              },
              "primaryCategoryId": 7,
              "status": "ACTIVE_COMPONENT",
              "urlName": "package-file-service---putting-it-all-together",
              "visibility": "HIDDEN"
            },
            "componentId": 379,
            "componentUUID": "00446ca0-70eb-3da3-a30b-33188203e9a3",
            "created": "2017-12-28 16:51:18",
            "createdById": 31489,
            "id": 358,
            "modified": "2018-01-25 15:53:56",
            "modifiedById": 49633,
            "name": "Package File Service - Putting it all together",
            "pathwayId": 346,
            "position": 2
          }
        ],
        "courseInfo": "",
        "created": "2017-11-10 15:20:48",
        "createdById": 49633,
        "customField01": "",
        "customField02": "",
        "customField03": "",
        "customField04": "",
        "customField05": "",
        "customField06": "",
        "customField07": "",
        "customField08": "",
        "customField09": "",
        "customField10": "",
        "deprecatedBy": "",
        "duration": {
          "days": 0,
          "minutesPerDay": 0
        },
        "generateCertificate": "DEFAULT",
        "generateProofOfCompletion": "DEFAULT",
        "id": 346,
        "modified": "2017-11-14 17:00:34",
        "modifiedById": 38,
        "name": "Package File Service",
        "orderNumber": 0,
        "price": {
          "amount": 0.0,
          "currency": "USD"
        },
        "primaryCategoryId": 7,
        "status": "ACTIVE_COMPONENT",
        "type": {
          "_displayName_": "Module",
          "_keyword_": "course_pathway_type",
          "created": "2015-06-14 23:21:43",
          "id": 3,
          "modified": "2015-06-14 23:21:43",
          "name": "Module",
          "rootType": false,
          "supportedComponentTypes": [
            "e_learning_component",
            "course",
            "content_component",
            "exam_component"
          ]
        },
        "typeId": 3,
        "urlName": "package-file-service",
        "visibility": "HIDDEN"
      },
      "componentId": 346,
      "componentUUID": "8547b3fc-a265-3b93-be1b-9abe1ff61581",
      "created": "2017-11-10 15:20:48",
      "createdById": 49633,
      "id": 315,
      "modified": "2018-01-25 15:53:56",
      "modifiedById": 49633,
      "name": "Package File Service",
      "pathwayId": 328,
      "position": 6
    },
    {
      "_displayName_": "Course Requirement #361",
      "_keyword_": "course_requirement",
      "component": {
        "UUID": "056d642c-e8ba-35d3-a805-65c56deec096",
        "_displayName_": "Puppet Syntax - Wrap-up",
        "_keyword_": "course_pathway",
        "components": [
          {
            "_displayName_": "Course Requirement #362",
            "_keyword_": "course_requirement",
            "component": {
              "UUID": "a55919c4-399b-397b-a008-84fae6fdbcd9",
              "_displayName_": "Puppet Syntax - Wrap-up",
              "_keyword_": "content_component",
              "content": "<p>&nbsp;</p>\r\n<p style=\"text-align: center;\"><img src=\"/static/images/courses/syntax/361-course-finish-congratulations-star.png\" alt=\"Illustration of a gold trophy and blue stars and the words 'Congratulations, you completed Puppet Syntax'\" width=\"700\" /></p>\r\n<p>You now know the essential building blocks for working with Puppet. You have made great progress in your learning journey and are on your way to accomplishing great things!</p>\r\n<h2>What would you like to do next?</h2>\r\n<ul style=\"list-style-type: square;\">\r\n<li><a href=\"https://github.com/puppetlabs\">Dive deeper into Puppet code.</a></li>\r\n<li><a href=\"https://learn.puppet.com/category/self-paced-training\">Check out some other self-paced courses.</a></li>\r\n<li>Explore <a href=\"https://learn.puppet.com/category/online-instructor-led-training\">online</a> and <a href=\"https://learn.puppet.com/category/instructor-led-training\">in-person trainings.</a></li>\r\n<li><a href=\"https://ask.puppet.com/questions/\" target=\"_blank\">Get&nbsp;answers for&nbsp;your Puppet questions</a>.&nbsp;</li>\r\n<li><a href=\"https://slack.puppet.com/\">Connect with the Puppet community on Slack.</a></li>\r\n<li><a href=\"https://puppet.com/company/contact\">Leave feedback about this course.</a></li>\r\n<li><a href=\"https://try.github.io/levels/1/challenges/1\">Learn about git.</a></li>\r\n</ul>",
              "created": "2017-12-14 15:49:39",
              "createdById": 49633,
              "customField01": "",
              "customField02": "",
              "customField03": "",
              "customField04": "",
              "customField05": "",
              "customField06": "",
              "customField07": "",
              "customField08": "",
              "customField09": "",
              "customField10": "",
              "deprecatedBy": "",
              "duration": {
                "days": 0,
                "minutesPerDay": 0
              },
              "generateCertificate": "DEFAULT",
              "generateProofOfCompletion": "DEFAULT",
              "id": 361,
              "modified": "2018-01-11 10:27:30",
              "modifiedById": 49633,
              "name": "Puppet Syntax - Wrap-up",
              "orderNumber": 0,
              "price": {
                "amount": 0.0,
                "currency": "USD"
              },
              "primaryCategoryId": 7,
              "status": "ACTIVE_COMPONENT",
              "urlName": "puppet-syntax---outro/wrap-up",
              "visibility": "HIDDEN"
            },
            "componentId": 361,
            "componentUUID": "a55919c4-399b-397b-a008-84fae6fdbcd9",
            "created": "2018-01-05 15:03:50",
            "createdById": 31489,
            "id": 362,
            "modified": "2018-01-25 15:53:57",
            "modifiedById": 49633,
            "name": "Puppet Syntax - Wrap-up",
            "pathwayId": 380,
            "position": 1
          }
        ],
        "created": "2018-01-05 15:03:15",
        "createdById": 31489,
        "duration": {
          "days": 0,
          "minutesPerDay": 0
        },
        "generateCertificate": "DEFAULT",
        "generateProofOfCompletion": "DEFAULT",
        "id": 380,
        "modified": "2018-01-05 15:03:15",
        "modifiedById": 31489,
        "name": "Puppet Syntax - Wrap-up",
        "orderNumber": 0,
        "price": {
          "amount": 0.0,
          "currency": "USD"
        },
        "primaryCategoryId": 7,
        "status": "ACTIVE_COMPONENT",
        "type": {
          "_displayName_": "Module",
          "_keyword_": "course_pathway_type",
          "created": "2015-08-02 21:45:38",
          "id": 6,
          "modified": "2015-08-02 21:45:38",
          "name": "Module",
          "rootType": false,
          "supportedComponentTypes": [
            "e_learning_component",
            "course",
            "content_component",
            "exam_component"
          ]
        },
        "typeId": 6,
        "urlName": "puppet-syntax---wrap-up",
        "visibility": "PUBLIC"
      },
      "componentId": 380,
      "componentUUID": "056d642c-e8ba-35d3-a805-65c56deec096",
      "created": "2018-01-05 15:03:15",
      "createdById": 31489,
      "id": 361,
      "modified": "2018-01-25 15:53:56",
      "modifiedById": 49633,
      "name": "Puppet Syntax - Wrap-up",
      "pathwayId": 328,
      "position": 7
    },
    {
      "_displayName_": "Course Requirement #332",
      "_keyword_": "course_requirement",
      "component": {
        "UUID": "f0f14e45-bf09-3c9c-929a-41b674c6e3df",
        "_displayName_": "Puppet Syntax - Glossary",
        "_keyword_": "course_pathway",
        "components": [
          {
            "_displayName_": "Course Requirement #333",
            "_keyword_": "course_requirement",
            "component": {
              "UUID": "b8995565-7919-3356-99c0-724f79daf45c",
              "_displayName_": "Glossary - Content",
              "_keyword_": "content_component",
              "content": "<h3 id=\"toc_0\">Glossary</h3>\r\n<p><strong>Declarative Language:</strong> A style of coding that describes the end result, without the steps of how to do it. <a href=\"https://www.netguru.co/blog/imperative-vs-declarative\">You can learn more about declarative languages and why they are so great here</a>.</p>\r\n<p><strong>Resource:</strong> Something on a server&nbsp;you would like to manage. <a href=\"https://puppet.com/docs/puppet/5.3/lang_resources.html\">Learn more about resources here</a>.</p>\r\n<p><strong>Attribute:</strong> A manageable configuration for a resource. For example, the owner of a file. <a href=\"https://en.wikipedia.org/wiki/Attribute_(computing)\">Here&rsquo;s a more in depth explanation of attributes.</a></p>\r\n<p><strong>Node</strong>: A single machine that uses Puppet. For example, your laptop could be a node. An individual server could also be a node. <a href=\"https://puppet.com/docs/puppet/5.0/lang_node_definitions.html\">Here&rsquo;s some more info about Puppet Nodes.</a></p>\r\n<p><strong>Syntax Validation:</strong> Checking that your code is in the right format without checking what it's actually doing. <a href=\"https://puppet.com/docs/puppet/5.3/style_guide.html\">You can learn about Puppet Syntax here</a>.</p>\r\n<p><strong>Facts:</strong> Information about a specific node written in the form of a key-value pair. This information might include the operating system being used, the IP address, or whether or not it is a virtual machine. <a href=\"https://puppet.com/blog/fact\">Learn more about facts here</a>.</p>\r\n<p><strong>Array</strong>: An array is a series of values that looks like ['one', 'two', 'three'], denoted by square brackets. <a href=\"https://techterms.com/definition/array\">Learn more about arrays here.</a></p>\r\n<p><strong>Hash:</strong> A hash is a series of key-value pairs that looks like { 'a' =&gt; 'A', 'b' =&gt; 'B', 'c' =&gt;'C' } denoted by curly braces. <a href=\"https://www.techopedia.com/definition/25432/hash-code\">Learn more about hashes here.</a></p>\r\n<p><strong>Directory:</strong> In computing, a directory is a catalog containing related files, also sometimes called a folder. A directory can contain other directories (known as subdirectories). These are typically referred to as having a parent-child relationship, with the top-most directory being referred to as the &lsquo;root&rsquo;. <a href=\"https://en.wikipedia.org/wiki/Directory_(computing)\">Learn more about directories here.</a></p>\r\n<p><strong>Symlink:</strong> Also known as a symbolic link, or a soft link. A symlink points to the entry that contains the data; it does not contain the data itself. <a href=\"https://en.wikipedia.org/wiki/Symbolic_link\">Learn more about symlinks here.</a></p>",
              "created": "2017-11-17 10:02:09",
              "createdById": 49633,
              "customField01": "",
              "customField02": "",
              "customField03": "",
              "customField04": "",
              "customField05": "",
              "customField06": "",
              "customField07": "",
              "customField08": "",
              "customField09": "",
              "customField10": "",
              "deprecatedBy": "",
              "duration": {
                "days": 0,
                "minutesPerDay": 0
              },
              "generateCertificate": "DEFAULT",
              "generateProofOfCompletion": "DEFAULT",
              "id": 348,
              "modified": "2018-01-05 15:07:40",
              "modifiedById": 31489,
              "name": "Glossary - Content",
              "orderNumber": 0,
              "price": {
                "amount": 0.0,
                "currency": "USD"
              },
              "primaryCategoryId": 7,
              "status": "ACTIVE_COMPONENT",
              "urlName": "glossary",
              "visibility": "HIDDEN"
            },
            "componentId": 348,
            "componentUUID": "b8995565-7919-3356-99c0-724f79daf45c",
            "created": "2017-12-04 15:04:47",
            "createdById": 49633,
            "id": 333,
            "modified": "2018-01-25 15:53:56",
            "modifiedById": 49633,
            "name": "Glossary",
            "pathwayId": 356,
            "position": 1
          }
        ],
        "courseInfo": "",
        "created": "2017-12-04 15:04:38",
        "createdById": 49633,
        "customField01": "",
        "customField02": "",
        "customField03": "",
        "customField04": "",
        "customField05": "",
        "customField06": "",
        "customField07": "",
        "customField08": "",
        "customField09": "",
        "customField10": "",
        "deprecatedBy": "",
        "duration": {
          "days": 0,
          "minutesPerDay": 0
        },
        "generateCertificate": "DEFAULT",
        "generateProofOfCompletion": "DEFAULT",
        "id": 356,
        "modified": "2017-12-04 16:00:07",
        "modifiedById": 49633,
        "name": "Puppet Syntax - Glossary",
        "orderNumber": 0,
        "price": {
          "amount": 0.0,
          "currency": "USD"
        },
        "primaryCategoryId": 7,
        "status": "ACTIVE_COMPONENT",
        "type": {
          "_displayName_": "Module",
          "_keyword_": "course_pathway_type",
          "created": "2015-06-14 23:21:43",
          "id": 3,
          "modified": "2015-06-14 23:21:43",
          "name": "Module",
          "rootType": false,
          "supportedComponentTypes": [
            "e_learning_component",
            "course",
            "content_component",
            "exam_component"
          ]
        },
        "typeId": 3,
        "urlName": "puppet-syntax---glossary",
        "visibility": "HIDDEN"
      },
      "componentId": 356,
      "componentUUID": "f0f14e45-bf09-3c9c-929a-41b674c6e3df",
      "created": "2017-12-04 15:04:38",
      "createdById": 49633,
      "id": 332,
      "modified": "2018-01-25 15:53:56",
      "modifiedById": 49633,
      "name": "Puppet Syntax - Glossary",
      "pathwayId": 328,
      "position": 8
    }
  ],
  "courseInfo": "<h2>Getting Started With Puppet Syntax</h2>\r\n<p>Puppet is a <a href=\"https://link.springer.com/referenceworkentry/10.1007%2F978-1-4419-9863-7_1334\" target=\"_blank\" >declarative language</a>, written for a computer, yet easy for humans to read and write. In this tutorial, you will be introduced to the basics of writing Puppet code. Each course unit is designed to build upon the previous one, increasing in complexity as the course progresses. At the end of each unit you will be asked to write some Puppet code using our interactive command line tool. By the end of the training, you should have a good grasp on how Puppet code works.</p>\r\n",
  "created": "2017-11-09 13:53:12",
  "createdById": 49633,
  "customField01": "",
  "customField02": "",
  "customField03": "",
  "customField04": "",
  "customField05": "",
  "customField06": "",
  "customField07": "",
  "customField08": "",
  "customField09": "",
  "customField10": "",
  "deprecatedBy": "",
  "duration": {
    "days": 1,
    "minutesPerDay": 30
  },
  "generateCertificate": "DEFAULT",
  "generateProofOfCompletion": "DEFAULT",
  "id": 328,
  "modified": "2018-01-16 15:50:16",
  "modifiedById": 49633,
  "name": "Introduction to Puppet Syntax",
  "orderNumber": 0,
  "price": {
    "amount": 0.0,
    "currency": "USD"
  },
  "primaryCategoryId": 7,
  "status": "DISABLED",
  "type": {
    "_displayName_": "Course",
    "_keyword_": "course_pathway_type",
    "created": "2015-06-14 23:21:43",
    "id": 4,
    "modified": "2015-06-14 23:21:43",
    "name": "Course",
    "rootType": true,
    "supportedComponentTypes": [
      "e_learning_component",
      "course",
      "content_component",
      "exam_component"
    ]
  },
  "typeId": 4,
  "urlName": "introduction-to-puppet-syntax---ld-enterprise-course",
  "visibility": "HIDDEN"
}